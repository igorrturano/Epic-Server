use uo;
use os;
use polsys;   
use util;


include ":tn:tngumps";
include ":gumps:requestGump";
include ":itemutils:canAccess";
include "include/say";
include ":gumps:yesNo";
include ":sysbook:include/sealedBooks";
include ":datafile:datafile";

function SimpleLog(datafile_spec, message)
    var current_clock := ReadGameClock();
    var log_entry := "Clock[" + current_clock + "] - " + message;
    // Se você conseguir fazer StrFormatTime funcionar, substitua a linha acima por:
    // var log_entry := StrFormatTime("%Y-%m-%d %H:%M:%S", ReadGameClock()) + " - " + message;

    var df := DFOpenDataFile(datafile_spec, DF_APPEND | DF_NO_CREATE); // Tenta abrir para anexar, não cria se não existir

    if (df.errortext) // Se falhou ao abrir (ex: não existe)
        df := CreateDataFile(datafile_spec); // Tenta criar o datafile (será tipo string por padrão)
        if(df.errortext)
            return 0;
        endif
    endif

    // Se chegou aqui, df é um datafile válido.
    // AppendElement adiciona a string como um novo elemento no final do datafile.
    var append_result := df.AppendElement(log_entry);
    if (append_result.errortext)
        return 0;
    endif
    
    // Para datafiles usados como logs simples, não precisamos descarregá-los imediatamente
    // a menos que haja um volume muito alto de escrita ou preocupação com perda de dados em crash.
    // UnloadDataFile(datafile_spec); // Opcional: descomente se quiser forçar a escrita no disco imediatamente.

    return 1;
endfunction



program use_Carimbo(who, tool)

	if(!can_access(who, tool))
		return 0;
	endif
	if((!tool.movable) or !ReserveItem(tool))
		SendSysMessageEx(who, "Voce nao pode usar isto.", SSM_FAIL);
		return 0;
	endif
	if( !(tool in EnumerateItemsInContainer(who.backpack)) )
		SendSysMessage(who, "O item precisa estar na sua mochila.", SSM_FAIL);
		return 0;
	endif

	if (!GetObjProperty(tool, "selo"))
		var CarimboChoice := YesNo(who, "Este Sinete nao possui um selo, deseja atribuir algum?");
		if (!CarimboChoice)
			var SeloComum := YesNo(who, "Deseja usar um Selo Comum?");
			if (!SeloComum)
				return 0;
			endif
			SetObjProperty(tool, "selo", "Selo Comum");
			SetObjProperty(tool, "description", "Sinete de Selo Comum");
			SetName(tool, tool.desc);
			return 1;
		endif
		if (who.cmdlevel >= 3)
			var NomeSeloGM := cstr(RequestGump(who, "(GM) Entre com o nome do selo."));
			SetObjProperty(tool, "selo", NomeSeloGM);
			SetObjProperty(tool, "description", "Sinete de " + NomeSeloGM);
			SetName(tool, tool.desc);
			return 1;
		endif

		SendSysMessageEx(who, "Selecione o Anel de Familia para criar o selo", SSM_REQUEST);
		var anel := Target(who);
		if (!anel)
			SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
			return;
		elseif (anel.objtype != 0x108a)
			SendSysMessageEx(who, "Isto nao e um anel.", SSM_FAIL);
			return;
		elseif (!GetObjProperty(anel, "familia"))
			SendSysMessageEx(who, "Este nao e um anel de familia nobre.", SSM_FAIL);
			return;
		endif

		var NomeFamiliaAnel := GetObjProperty(anel, "familia");
		SetObjProperty(tool, "selo", "Selo da Familia " + NomeFamiliaAnel);
		SetObjProperty(tool, "description", "Carimbo de " + NomeFamiliaAnel);
		SendSysMessageEx(who, "Selo atribuido ao Carimbo.", SSM_INFO);
		SetName(tool, tool.desc);
		return 1;
	endif

	EraseObjProperty(who, "IsMeditating");
	EraseObjProperty(who, "HealTimer");

	SendSysMessageEx(who, "Selecione uma vela acesa para extrair a cera", SSM_REQUEST);
	var vela := Target(who);
	if (!vela)
		SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
		return;
	elseif ((vela.objtype != 5171) && (vela.objtype != 0x0A0F) && (vela.objtype != 0x0A26) && (vela.objtype != 0x0A29) && (vela.objtype != 0x142C) && (vela.objtype != 0x1853) && (vela.objtype != 0x1854) && (vela.objtype != 0x1856) && (vela.objtype != 0x1C14))
		SendSysMessageEx(who, "Isto nao e uma vela acesa.", SSM_FAIL);
		return;
	endif

	SendSysMessageEx(who, "Selecione o item (livro ou carta) para selar.", SSM_REQUEST);
	var targ := Target(who);

	if (!targ)
		SendSysMessageEx(who, "Cancelado.", SSM_FAIL);
		return;
	endif

	if (GetObjProperty(targ, "Selado") == "sim")
		SendSysMessageEx(who, "Isto ja esta selado.", SSM_FAIL);
		return;
	endif

    var eh_livro_de_loot := targ.isBook() && (targ.objtype != 0xFF5 && targ.objtype != 0x0FF5);
    var eh_carta := targ.isBook() && (targ.objtype == 0xFF5 || targ.objtype == 0x0FF5);

    if (!eh_livro_de_loot && !eh_carta)
        SendSysMessageEx(who, "Este Sinete so pode selar livros compativeis ou cartas (objtype 0xFF5).", SSM_FAIL);
        return;
    endif

    var msg_confirmacao := "Deseja mesmo selar este item? Ele nao podera sofrer alteracoes depois disso.";
    if (eh_livro_de_loot)
        msg_confirmacao := "Deseja mesmo selar este livro? Ele nao podera sofrer alteracoes e seu conteudo sera arquivado para os tesouros do mundo.";
    elseif (eh_carta)
         msg_confirmacao := "Deseja mesmo carimbar esta carta? Ela nao podera sofrer alteracoes depois disso.";
    endif

    var yes := YesNo(who, msg_confirmacao);
    if (!yes)
        SendSysMessageEx(who, "Voce optou por nao selar.", SSM_FAIL);
        return;
    endif

    var nome_do_selo_para_item := GetObjProperty(tool, "selo");

    // 1. Tornar o item alvo ReadOnly
    var readonly_op_result := targ.ReadOnly(1);

    if (!readonly_op_result)
        SendSysMessageEx(who, "Erro ao tentar tornar o item somente leitura (chamada inicial falhou). A selagem falhou.", SSM_FAIL);
        return;
    endif
    
    
    SetObjProperty(targ, "Selado", "sim");
    SetObjProperty(targ, "description", nome_do_selo_para_item);
    
    if (eh_carta)
         SetName(targ, nome_do_selo_para_item);
    endif

    PrintTextAbove(who, "*selando o item com cera e o sinete*");
    PlaySoundEffect(who, 0x4D4);

    if (eh_livro_de_loot)
        SendSysMessage(who, "Arquivando o conteudo do livro...", SSM_INFO);
        var sealed_datafile_serial := SealBookToDatafile(targ);
        
        if (sealed_datafile_serial)
            SetObjProperty(targ, "MasterSealedSerial", sealed_datafile_serial);
            SendSysMessageEx(who, "Livro selado e seu conteudo foi arquivado com sucesso para os tesouros do mundo!", SSM_INFO);
        else
            SendSysMessageEx(who, "Livro foi selado, mas ocorreu um erro ao tentar arquivar seu conteudo. Contate um Administrador.", SSM_FAIL);
        endif
    elseif (eh_carta)
        SendSysMessageEx(who, "Carta selada com sucesso.", SSM_INFO);
    endif

    return 1;

endprogram