use uo;
use os;

include "include/say";
include ":datafile:datafile";

program onInsert(character, container, movetype, inserttype, adding_item, existing_stack, amount_to_add)
    var donation_types := array{
        "IsKingdomDonationComida",
        "IsKingdomDonationMoedas",
        "IsKingdomDonationCouro",
        "IsKingdomDonationMetal",
        "IsKingdomDonationMadeira",
        "IsKingdomDonationPano",
        "IsKingdomDonationPedra",
        "IsKingdomDonationJoias"
    };

    foreach donation_type in donation_types
        if (GetObjProperty(adding_item, donation_type))
            var resource_type := Lower(donation_type[18, len(donation_type)]);
            var amount := adding_item.amount;

            if (resource_type == "moedas")
                if (adding_item.objtype == 0xBA64 || adding_item.objtype == 0xBA65)
                    SendSysMessageEx(character, "Por favor visite um cambista e troque suas moedas, aceitamos apenas moedas de cobre.", SSM_FAIL);
                    return 0; // Impede a inserção do item
                endif
            endif

            // Contar itens no baú
            var recursos_atualizados := ContarItensDoadosNoBau(container);

            // Atualizar recursos no arquivo de dados
            AtualizarRecursos(recursos_atualizados, character);

            SendSysMessageEx(character, "Doação de " + amount + " " + resource_type + " registrada com sucesso.", SSM_INFO);

            break;
        endif
    endforeach

    if (Cint(inserttype) == 2)
        if ( !(character.concealed || character.hidden) )
            PrintText(character, "*Acrescentou " + amount_to_add + ", totalizando " + existing_stack.desc + " na " + container.desc + "*", 6);
        endif
    else
        if ( !(character.concealed || character.hidden) )
            PrintText(character, "*Colocou "+ adding_item.desc +" no "+ container.desc +"*", 6);
        endif
    endif

    return 1;
endprogram

function AtualizarRecursos(recursos, character)
    var data_file := DFOpenDataFile("kingdom_resources", DF_CREATE);
    var elem := DFFindElement(data_file, "resources", DF_CREATE);
    
    if (elem)
        foreach resource in (recursos.Keys())
            elem.SetProp(resource, recursos[resource]);
        endforeach
    else
        SendSysMessage(character, "Erro ao atualizar recursos do reino.");
    endif
endfunction

function ContarItensDoadosNoBau(bau)
    var recursos := struct{
        comida := 0,
        moedas := 0,
        couro := 0,
        metal := 0,
        madeira := 0,
        pano := 0,
        pedras := 0,
        joias := 0
    };

    foreach item in EnumerateItemsInContainer(bau)
        if (GetObjProperty(item, "IsKingdomDonationComida"))
            recursos.comida += item.amount;
        elseif (GetObjProperty(item, "IsKingdomDonationMoedas"))
            if (item.objtype != 0xBA64 && item.objtype != 0xBA65) // Aceita apenas moedas de cobre
                recursos.moedas += item.amount;
            endif
        elseif (GetObjProperty(item, "IsKingdomDonationCouro"))
            recursos.couro += item.amount;
        elseif (GetObjProperty(item, "IsKingdomDonationMetal"))
            recursos.metal += item.amount;
        elseif (GetObjProperty(item, "IsKingdomDonationMadeira"))
            recursos.madeira += item.amount;
        elseif (GetObjProperty(item, "IsKingdomDonationPano"))
            recursos.pano += item.amount;
        elseif (GetObjProperty(item, "IsKingdomDonationPedra"))
            recursos.pedras += item.amount;
        elseif (GetObjProperty(item, "IsKingdomDonationJoias"))
            recursos.joias += item.amount;
        endif
    endforeach

    return recursos;
endfunction