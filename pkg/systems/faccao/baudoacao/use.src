use uo;
use os;
use cfgfile;
use datafile;
use guilds;

include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":datafile:datafile";
include "include/say";
include ":faccao:include/shared_functions";

// Baú de Doações - use.src atualizado com depuração
use uo;
use os;
use cfgfile;
use datafile;
use guilds;

include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":datafile:datafile";
include "include/say";
include ":faccao:include/shared_functions";

program use_donation_chest(who, item)
    if (!who || !item)
        SendSysMessage(who, "Erro: who ou item é nulo");
        return 0;
    endif

    // INÍCIO DEPURAÇÃO
    Print("DEBUG-BAU: " + who.name + " está tentando abrir o baú " + item.desc);
    
    // Imprimir propriedades do baú
    Print("DEBUG-BAU: Propriedades do baú:");
    foreach prop_name in GetObjPropertyNames(item)
        var prop_value := GetObjProperty(item, prop_name);
        Print("DEBUG-BAU: " + prop_name + " = " + prop_value);
    endforeach
    
    // Informações do jogador
    Print("DEBUG-BAU: Informações do jogador:");
    Print("DEBUG-BAU: CmdLevel = " + who.cmdlevel);
    
    var player_guild := who.guild;
    if (player_guild)
        Print("DEBUG-BAU: Guild ID = " + player_guild.guildid);
        Print("DEBUG-BAU: Guild Leader = " + player_guild.leader);
        Print("DEBUG-BAU: Serial do jogador = " + who.serial);
        
        var guild_name := player_guild.GetProp(FACTION_PROP_NAME);
        if (!guild_name)
            guild_name := player_guild.GetProp("name");
        endif
        if (!guild_name)
            guild_name := player_guild.guildname;
        endif
        
        Print("DEBUG-BAU: Nome da guilda/facção = " + guild_name);
        
        if (player_guild.leader == who.serial)
            Print("DEBUG-BAU: ** O jogador É o líder da guilda **");
        else
            Print("DEBUG-BAU: O jogador NÃO é o líder da guilda");
        endif
    else
        Print("DEBUG-BAU: O jogador não pertence a nenhuma guilda");
    endif
    
    var chardata := GetObjProperty(who, "chardata");
    if (chardata)
        Print("DEBUG-BAU: Título de nobreza = " + chardata.current_nobility_title);
        Print("DEBUG-BAU: Cargo = " + chardata.current_professional_position);
    endif
    
    var player_rank := GetObjProperty(who, "guild_rank");
    Print("DEBUG-BAU: Cargo na guilda = " + player_rank);
    
    // Verificação de acesso
    var bau_faction := GetFactionOfChest(item);
    Print("DEBUG-BAU: Facção do baú = " + bau_faction);
    
    var can_open := CanOpenChest(who, item);
    Print("DEBUG-BAU: Resultado da verificação de acesso: " + can_open);
    
    // Detalhar a razão do acesso ou negação
    if (who.cmdlevel >= 3)
        Print("DEBUG-BAU: Acesso permitido - GM");
    endif
    
    if (chardata && (chardata.current_nobility_title in {"Rei", "Rainha"} || 
        chardata.current_professional_position in {"Mão do Rei", "Imperador"}))
        Print("DEBUG-BAU: Acesso permitido - Título de nobreza/cargo");
    endif
    
    if (player_guild)
        var guild_name := player_guild.GetProp(FACTION_PROP_NAME);
        if (!guild_name)
            guild_name := player_guild.GetProp("name");
        endif
        
        if (guild_name == bau_faction && player_guild.leader == who.serial)
            Print("DEBUG-BAU: Acesso permitido - Líder da facção do baú");
        endif
        
        if (guild_name == bau_faction && player_rank in {"Lider", "Capitao", "Tenente"})
            Print("DEBUG-BAU: Acesso permitido - Cargo na facção");
        endif
    endif
    // FIM DEPURAÇÃO

    if (!CanOpenChest(who, item))
        SendSysMessage(who, "Você não tem permissão para abrir o baú");
        return 0;
    endif

    // Resto do código original...
    // Verificar o tipo de interface a ser aberta baseado nas propriedades
    var interface_type := GetObjProperty(item, "interface_type");
    var faction_name := GetFactionOfChest(item);
    
    // Se for um baú de facção específica
    if (faction_name && faction_name != "Reino")
        // Se for um item que deve abrir a interface de facção
        if (interface_type == "faccao" || GetObjProperty(item, "is_faction_interface"))
            // Abrir a interface da facção
            SendSysMessage(who, "Acessando relatório da Facção: " + faction_name);
            // Obter o guildid para passar para o script faccao.src
            var guild := FindGuildByName(faction_name);
            if (guild)
                start_script(":faccao:faccao", array{who, guild, "guild"});
                return 1;
            endif
        endif
        
        // Se for um baú de doações, abrir o container
        if (interface_type == "bau" || !interface_type)
            // Também abrir o baú
            SendViewContainer(who, item);
            return 1;
        endif
    endif

    // Comportamento padrão - mostrar o menu de seleção para baú de doações
    var choice := 0;
    repeat
        choice := ShowSelectionGump(who);

        case (choice)
            1: // Abrir o Baú
                OpenChestAndGump(who, item);
            2: // Acessar Relatório de Doações
                SendSysMessage(who, "Acessando relatório de doações");
                ShowDoacoesGump(who, item);
            3: // Fechar o Baú
                SendSysMessage(who, "");
                break;
        endcase
    until (choice == 3);

    return 1;
endprogram

function OpenChestAndGump(who, item)
    var message := GetOpeningMessage(who);
    SendSysMessage(who, message);
    PrintText(who, "*Abriu "+item.desc+"*");
    SendViewContainer(who, item);
endfunction

function GetOpeningMessage(who, chest := 0)
    var chardata := GetObjProperty(who, "chardata");
    if (!chardata)
        return "Você tem permissão para abrir o baú.";
    endif

    if (who.cmdlevel >= 3)
        return "Como GM, você tem acesso total ao baú.";
    endif
    
    // Verificar se o baú foi passado e tem facção
    var chest_faction := "";
    if (chest)
        chest_faction := GetObjProperty(chest, OBJ_FACTION_PROP);
    endif
    
    var player_faction := "";
    var player_guild := who.guild;
    
    if (player_guild)
        player_faction := player_guild.GetProp("name");
        if (!player_faction)
            player_faction := player_guild.guildname;
        endif
    endif
    
    // Se tem título de nobreza mas não é da mesma facção (apenas se ambas as facções forem conhecidas)
    if (chest_faction && player_faction && player_faction != chest_faction)
        if (chardata.current_nobility_title in {"Rei", "Rainha"})
            return "Vossa Majestade, como governante do Reino, tem acesso ao tesouro de " + chest_faction + ".";
        elseif (chardata.current_professional_position == "Imperador")
            return "Vossa Majestade Imperial, o tesouro de " + chest_faction + " está à sua disposição.";
        elseif (chardata.current_professional_position == "Mão do Rei")
            return "Mão do Rei, por sua autoridade sobre as facções, você tem acesso a este tesouro.";
        endif
    endif

    // Mensagens padrão para membros da facção
    case (chardata.current_nobility_title)
        "Rei": return "Meu Rei, o tesouro é de Vossa Majestade.";
        "Rainha": return "Minha Rainha, o tesouro é de Vossa Majestade.";
        default:
            if (chardata.current_professional_position == "Mão do Rei")
                return "Mão do Rei, você tem acesso ao baú.";
            elseif (chardata.current_professional_position == "Imperador")
                return "Vossa Majestade Imperial, o tesouro está à sua disposição.";
            endif
    endcase

    return "Você tem permissão para abrir o baú.";
endfunction

function ShowDoacoesGump(who, item)
    var gump := CreateDonationReportGump(item);
    GFSendGump(who, gump);
endfunction

function CreateDonationReportGump(container)
    var gump := GFCreateGump();
    GFResizePic(gump, 0, 0, GFCfgConst("Defaults", "BackGround"), 400, 500);
    GFResizePic(gump, 15, 15, GFCfgConst("Defaults", "ForeGround"), 370, 470);
    
    GFTextMid(gump, 10, 25, 380, 2100, "Baú de Doações do Reino");
    GFTextMid(gump, 10, 60, 380, 2100, "Recursos Disponíveis");
    
    var recursos := ContarItensDoadosNoBau(container);
    
    // Recursos de comida
    GFResizePic(gump, 30, 100, 9350, 330, 50);
    GFTilePic(gump, 40, 110, 29807); // Ícone de comida
    GFTextLine(gump, 75, 105, 53, "Comida:");
    GFTextRight(gump, 340, 105, 53, CStr(recursos.comida));
    
    // Recursos de moedas
    GFResizePic(gump, 30, 160, 9350, 330, 50);
    GFTilePic(gump, 40, 170, 3823); // Ícone de moedas
    GFTextLine(gump, 75, 165, 53, "Moedas:");
    GFTextRight(gump, 340, 165, 53, CStr(recursos.moedas));
    
    // Recursos de couro
    GFResizePic(gump, 30, 220, 9350, 330, 50);
    GFTilePic(gump, 40, 230, 4225); // Ícone de couro
    GFTextLine(gump, 75, 225, 53, "Couro:");
    GFTextRight(gump, 340, 225, 53, CStr(recursos.couro));
    
    // Recursos de metal
    GFResizePic(gump, 30, 280, 9350, 330, 50);
    GFTilePic(gump, 40, 290, 29421); // Ícone de metal
    GFTextLine(gump, 75, 285, 53, "Metal:");
    GFTextRight(gump, 340, 285, 53, CStr(recursos.metal));
    
    // Recursos de madeira
    GFResizePic(gump, 30, 340, 9350, 330, 50);
    GFTilePic(gump, 40, 350, 7135); // Ícone de madeira
    GFTextLine(gump, 75, 345, 53, "Madeira:");
    GFTextRight(gump, 340, 345, 53, CStr(recursos.madeira));
    
    // Botão de fechar
    GFAddButton(gump, 180, 430, 2128, 2129, GF_CLOSE_BTN, 0);
    
    return gump;
endfunction

function ShowSelectionGump(who)
    var gump := GFCreateGump();
    GFResizePic(gump, 0, 0, GFCfgConst("Defaults", "BackGround"), 400, 350);
    GFResizePic(gump, 15, 15, GFCfgConst("Defaults", "ForeGround"), 370, 320);

    GFTextMid(gump, 10, 30, 380, 2100, "Acesso às Doações do Reino");
    GFTextMid(gump, 10, 60, 380, 2100, "Escolha uma das opções:");

    GFAddButton(gump, 100, 100, 2151, 2154, GF_CLOSE_BTN, 1);
    GFTextLine(gump, 140, 100, 2103, "Abrir o Baú");

    GFAddButton(gump, 100, 150, 2151, 2154, GF_CLOSE_BTN, 2);
    GFTextLine(gump, 140, 150, 2103, "Acessar Relatório de Doações");

    GFAddButton(gump, 100, 200, 2151, 2154, GF_CLOSE_BTN, 3);
    GFTextLine(gump, 140, 200, 2103, "Fechar o Baú");

    var input := GFSendGump(who, gump);
    
    if (input[0] == 0)  // Se o gump foi fechado com o botão direito
        return 3;  // Retorna a opção de fechar o baú
    else
        return input[0];
    endif
endfunction

function CanOpenChest(who, item)
    return CanAccessChest(who, item);
endfunction