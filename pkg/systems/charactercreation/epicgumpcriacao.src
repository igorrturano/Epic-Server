use cfgfile;
use uo;
use os;

include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":tn:tngumps";
include ":gumps:requestGump";
include ":attributes:attributes";
include "include/client";
include ":charactercreation:createchar";
include ":disguise:disguise";
include ":datafile:datafile";
include "include/say";
include "include/creationUtils";
include "include/sounds";
include "include/epicConstants";
include ":charactercreation:include/RPTraits";
include ":nature:nature";


program epicCreationGump(who)
    resetCharacter(who);

    var culture_pic := culturalSelection(who);
    racialSelection(who, culture_pic);
    classSelection(who, culture_pic);
    backgroundSelection(who, culture_pic);
    traitSelection(who, culture_pic);
    skillSelection(who, culture_pic);
    attributeSelection(who, culture_pic);
    religionSelection(who);
    gameModeSelection(who);
    pathOfWisdom(who, culture_pic);
    languageSelection(who, culture_pic);
    itemInheritance(who);
    signSelection(who);
    birthDaySelection(who);
    RPcharacteristicsSelection(who, culture_pic);
    setBirthdate(who);
    looksSelection(who);
    setCitizenship(who);
    SetObjProperty(who, "nome_inicial", who.name);
    who.name := who.title_race;

    AP_SetVital(who, "Hunger", 0);
	HealDamage(who, 200);
	RecalcVitals(who);
	var tempo_agora := polcore().systime;
    SetObjProperty(who, "createdate", tempo_agora);

    // Open Beta 28/09
    startAdventure(who);
endprogram

function culturalSelection(who)
    var chardata := struct;
    var culture_pic := 0x9E7;
    var btn_value;
    while (1)
        var input := CultureGump(who, culture_pic);
        btn_value := input[0]; 

        if (btn_value == 201)
            culture_pic++;
        elseif (btn_value == 210) 
            culture_pic--;
        else
            break;
        endif

        if (culture_pic < 0x9E7)
            culture_pic := 0x9EE;
        elseif (culture_pic > 0x9EE)
            culture_pic := 0x9E7;
        endif
    endwhile
    chardata.+culture := getCultureByPictureId(culture_pic);
    chardata.+crafting := getCraftCultureByPictureId(culture_pic);
    SetObjProperty(who, "chardata", chardata);

    SendSysMessageEX(who, "Sua cultura será "+chardata.culture, SSM_INFO);
    return culture_pic;
endfunction

function racialSelection(who, culture_pic)
    var btn_value;
    var chardata := GetObjProperty(who, "chardata");

    while (1)
        var input := EpicRaceGump(who, culture_pic);
        foreach key in (input.keys)
            btn_value := key;
        endforeach
        if (btn_value == 201)
            chardata.raca := ANAO;
            break;
        elseif (btn_value == 202) 
            chardata.raca := DROW;
            break;
        elseif (btn_value == 203) 
            chardata.raca := ELFO;
            break;
        elseif (btn_value == 204) 
            chardata.raca := HUMANO;
            break;
        elseif (btn_value == 205)
            chardata.raca := ORC;
            break;
        elseif (btn_value == 206) 
            chardata.raca := POLSKI;
            break;
        elseif (chardata.culture == AIGLANA || chardata.culture == LESTE)
            SendSysMessageEX(who, "Escolha sua raça!", SSM_FAIL);
        else
            chardata.raca := getRaceByCulturalId(culture_pic)[1];
            break;
        endif
    endwhile

  SendSysMessageEX(who, "Voce será um "+chardata.raca, SSM_INFO);

    if (who.graphic == 400 && (chardata.raca == ELFO || chardata.raca == DROW))
        who.graphic := 1830;
    elseif(who.graphic == 401 && (chardata.raca == ELFO || chardata.raca == DROW))
        who.graphic := 1831;
    elseif (who.graphic == 400 && (chardata.raca == ORC))
        who.graphic := 1832;
    elseif (who.graphic == 401 && (chardata.raca == ORC))
        who.graphic := 1833;
    elseif(who.graphic == 400 && (chardata.raca == ANAO || chardata.raca == POLSKI))
        who.graphic := 1828;
    elseif(who.graphic == 401 && (chardata.raca == ANAO || chardata.raca == POLSKI))
        who.graphic := 1829;
    endif

    who.title_race := chardata.raca;
    who.race := chardata.raca;


    SetObjProperty(who, "chardata", chardata);
endfunction

function RPcharacteristicsSelection(who, culture_pic)
    var chardata := GetObjProperty(who, "chardata");
    var CaracteristicasCategories := array{
        "Altura",
        "Peso",
        "Olhos",
        "Idade Aparente",
        "Voz"
    };

    chardata.+caracteristicas_rp := struct {};
    foreach category in CaracteristicasCategories
        chardata.caracteristicas_rp[category] := 0;
    endforeach

    var racial_traits := GetRacialTraits(chardata.raca);
    var categories := GetPageCategories();
    var required_categories := array{"Altura", "Peso", "Olhos", "Voz"};

    var input;
    var all_requirements_met := 0;

    while (!all_requirements_met)
        input := CaracteristicasRPGump(who, chardata, culture_pic);
        
        if (input[0] == 222)  // 222 é o botão de finalizar
            var selected_count := CountSelectedCategories(chardata.caracteristicas_rp, required_categories);
            var age_filled := (chardata.idade_escolhida != error && chardata.idade_escolhida != "");

            if (selected_count == 4 && age_filled)
                all_requirements_met := 1;
                
                // Processar a idade aqui
                var age_info := ConvertAge(chardata.raca, CInt(chardata.idade_escolhida));
                chardata.idade_aparente := age_info[1];
                chardata.idade_real := age_info[2];
                
                SendSysMessageEx(who, "Sua idade aparente é " + chardata.idade_aparente + " (" + chardata.idade_real + " anos).", SSM_INFO);
            else
                if (selected_count < 4)
                    SendSysMessageEX(who, "Você precisa selecionar uma opção para Altura, Peso, Olhos e Voz antes de continuar.", SSM_FAIL);
                endif
                if (!age_filled)
                    SendSysMessageEX(who, "Você precisa preencher sua idade antes de continuar.", SSM_FAIL);
                endif
            endif
        else
            ProcessSelection(chardata, input[0]);
        endif
    endwhile

    SetObjProperty(who, "chardata", chardata);
    SendSysMessageEX(who, "Características raciais e idade selecionadas com sucesso.", SSM_INFO);
endfunction

function CountSelectedCategories(caracteristicas_rp, required_categories)
    var count := 0;
    foreach category in required_categories
        if (caracteristicas_rp[category] != 0)
            count += 1;
        endif
    endforeach
    return count;
endfunction

function classSelection(who, culture_pic)
    var btn_value;
    var chardata := GetObjProperty(who, "chardata");
    while (1)
        var input := ClassGump(who, culture_pic);
        foreach key in (input.keys)
            btn_value := key;
        endforeach
        if (btn_value == 201)
            chardata.+classe := GUERREIRO;
            break;
        elseif (btn_value == 202) 
            chardata.+classe := LADINO;
            break;
        elseif (btn_value == 203) 
            chardata.+classe := SABIO;
            break;
        else
            SendSysMessageEX(who, "Escolha seu caminho", SSM_FAIL);
        endif
    endwhile

    SetObjProperty(who, "chardata", chardata);
	SetObjProperty(who, "classe", chardata.classe);
    SendSysMessageEX(who, "Você escolheu o caminho do "+chardata.classe, SSM_INFO);
endfunction

function backgroundSelection(who, culture_pic)
    var btn_value;
    var chardata := GetObjProperty(who, "chardata");
    while (1)
        var input := backgroundGump(who, culture_pic);
        foreach key in (input.keys)
            btn_value := key;
        endforeach
        if (btn_value == 201)
            chardata.+background := BACKGROUNDS.DOMESTIC_WORK;
            chardata.+bgBonus := Domestic_Work;
            break;
        elseif (btn_value == 202) 
            chardata.+background := BACKGROUNDS.GATHERING;
            chardata.+bgBonus := GATHERING;
            break;
        elseif (btn_value == 203) 
            chardata.+background := BACKGROUNDS.MECHANICAL_APITUDE;
            chardata.+bgBonus := MECHANICS;
            break;
        elseif (btn_value == 204)
            chardata.+background := BACKGROUNDS.MEDICINE;
            chardata.+bgBonus := MEDICINE;
            break;
        elseif (btn_value == 205)
            chardata.+background := BACKGROUNDS.METAL_WORK;
            chardata.+bgBonus := METALWORKING;
            break;
        elseif (btn_value == 206) 
            chardata.+background := BACKGROUNDS.PICK_POCKETING;
            chardata.+bgBonus := PICKPOCKETING;
            break;
        elseif (btn_value == 207) 
            chardata.+background := BACKGROUNDS.SURVIVAL;
            chardata.+bgBonus := SURVIVAL;
            break;
        elseif (btn_value == 208) 
            chardata.+background := BACKGROUNDS.WOOD_WORK;
                chardata.+bgBonus := WOODWORKING;
            break;
        elseif (btn_value == 209) 
            chardata.+background := backgroundByCulture(who);
            chardata.+bgBonus := culturalTraitBonus(who, chardata);
            break;
        else
            SendSysMessageEX(who, "Escolha seu histórico", SSM_FAIL);
        endif
    endwhile

    SetObjProperty(who, "chardata", chardata);
    SendSysMessageEX(who, "Seu passado é "+chardata.background, SSM_INFO);
endfunction

function traitSelection(who, culture_pic)
    var btn_value;
    var chardata := GetObjProperty(who, "chardata");
    var traits := listTraits(who, chardata);
    var i := 1;

    while(1)
        var input := traitGump(who, culture_pic, traits);
        foreach key in (input.keys)
            btn_value := key;
        endforeach
        if (btn_value > 200)
            chardata.+trait := traits[btn_value-200].Nome;
            break;
        else
            SendSysMessageEX(who, "Escolha sua característica", SSM_FAIL);
        endif
    endwhile

    SetObjProperty(who, "chardata", chardata);
    SendSysMessageEX(who, "Sua característica é "+chardata.trait, SSM_INFO);
endfunction

function skillSelection(who, culture_pic)
    var btn_value;
    var chardata := GetObjProperty(who, "chardata");
    var pri_allowed := howManyPrimarias(chardata);
    var i := 1;
    chardata.+points := 20;
    if (chardata.trait == "Sabe-Tudo") chardata.points += 5; endif
    if (chardata.raca == "Humano") chardata.points += 2; endif
    chardata.+Skills := dictionary;
    var points := chardata.points;
    var pri_count := 0;
    while(1)
        if (chardata.points < 0)
            SendSysMessageEX(who, "Compra de habilidade inválida", SSM_FAIL);
            DisconnectClient(who);
        endif
        var input := skillGump(who, culture_pic, chardata);
        foreach key in (input.keys)
            btn_value := key;
        endforeach
        if (btn_value >= 100 && btn_value < 130)
            var skill := GetSkillNameFromId(btn_value-100);
            chardata.Skills.+skill;
            if (chardata.Skills[skill] > 3)
                chardata.Skills[skill] := 3;
            endif
            chardata.Skills[skill] -= 1;
            chardata.points++;
        elseif (btn_value >= 130 && btn_value < 200)
            var skill := GetSkillNameFromId(btn_value-130);

            chardata.Skills.+skill;
            if (chardata.Skills[skill] < 1)
                chardata.Skills[skill] := 0;
            endif
            chardata.Skills[skill] += 1;
            chardata.points--;
        endif
        if (btn_value >= 200 && btn_value < 230)
            var skill := GetSkillNameFromId(btn_value-200);

            chardata.Skills.+skill;
            if (chardata.Skills[skill] < 1)
                chardata.Skills[skill] := 0;
            endif
            chardata.Skills[skill] -= 1;
            chardata.points += 2;
        elseif (btn_value >= 230 && btn_value < 300)
            var skill := GetSkillNameFromId(btn_value-230);

            chardata.Skills.+skill;
            if (chardata.Skills[skill] < 1)
                chardata.Skills[skill] := 0;
            endif
            chardata.Skills[skill] += 1;
            chardata.points -= 2;
        endif
        if (btn_value >= 300 && btn_value < 330)
            var skill := GetSkillNameFromId(btn_value-300);

            chardata.Skills.+skill;
            if (chardata.Skills[skill] < 1)
                chardata.Skills[skill] := 0;
            endif
            chardata.Skills[skill] -= 1;
            chardata.points += 3;
        elseif (btn_value >= 330 && btn_value < 400)
            var skill := GetSkillNameFromId(btn_value-330);

            chardata.Skills.+skill;
            if (chardata.Skills[skill] < 1)
                chardata.Skills[skill] := 0;
            endif
            chardata.Skills[skill] += 1;
            chardata.points -= 3;
        endif
        if (btn_value >= 400 && btn_value < 430)
            var skill := GetSkillNameFromId(btn_value-400);

            chardata.Skills.+skill;
            if (chardata.Skills[skill] < 1)
                chardata.Skills[skill] := 0;
            endif
            chardata.Skills[skill] -= 1;
            chardata.points += 4;
        elseif (btn_value >= 430 && btn_value < 500)
            var skill := GetSkillNameFromId(btn_value-430);

            chardata.Skills.+skill;
            if (chardata.Skills[skill] < 1)
                chardata.Skills[skill] := 0;
            endif
            chardata.Skills[skill] += 1;
            chardata.points -= 4;
        elseif (btn_value == 500)
            chardata["Skills"].Erase("skill");
            var skillsmap := chardata.Skills;
            var skillsArray := skillsmap.keys();
            foreach skill in skillsArray
                if (chardata.Skills[skill] == 0)
                    chardata.Skills.Erase(skill);
                endif
            endforeach
            foreach skill in skillsArray
                if (chardata.Skills[skill] == 3)
                    pri_count++;
                endif
            endforeach
            if (pri_count > pri_allowed)
                SendSysMessageEX(who, "Você ultrapassou o número de primárias permitidas", SSM_FAIL);
                pri_count := 0;
                DisconnectClient(who);
            endif

            SetObjProperty(who, "chardata", chardata);
            SetObjProperty(who, "skill", 1);
            SendSysMessageEX(who, "Você definiu suas skills", SSM_INFO);
            break;
        endif
    endwhile

    var value;
	var skillsmap := chardata.Skills;
	var skillsArray := skillsmap.keys();
	foreach skill in skillsArray
		value := 0;
		if ( chardata.Skills[skill] == 3)
			value := 40;
		elseif (chardata.Skills[skill] == 2)
			value := 20;
		else
			value := 0;
		endif
		if ( AP_GetTrueSkill(who, skill) == 0)
			AP_SetTrueSkill(who, skill, value);
		endif
	endforeach
endfunction

function attributeSelection(who, culture_pic)
    var btn_value;
    var chardata := GetObjProperty(who, "chardata");
    chardata.+attribute_points := 80;
    chardata.+str := 40;
    chardata.+dex := 40;
    chardata.+int := 40;
    var traits := listTraits(who, chardata);
    var i := 1;

    while(1)
        var input := attributeGump(who, culture_pic, chardata);
       foreach key in (input.keys)
           btn_value := key;
       endforeach
       if (btn_value == 200)
            chardata.str += 5;
            chardata.attribute_points -= 5;
       elseif (btn_value == 201)
            chardata.str -= 5;
            chardata.attribute_points += 5; 
       elseif (btn_value == 210)
            chardata.dex += 5;
            chardata.attribute_points -= 5;
       elseif (btn_value == 211)
            chardata.dex -= 5;
            chardata.attribute_points += 5;
       elseif (btn_value == 220)
            chardata.int += 5;
            chardata.attribute_points -= 5;
       elseif (btn_value == 221)
            chardata.int -= 5;
            chardata.attribute_points += 5;
        else
            if (chardata.attribute_points < 0)
                SendSysMessageEX(who, "Compra de atributo inválida", SSM_FAIL);
                DisconnectClient(who);
            endif

            SetObjProperty(who, "chardata", chardata);
            attributeBonusByRaceAndTraits(who);

            SendSysMessageEX(who, "Você selecionou seus atributos", SSM_INFO);
            break;
       endif
    endwhile
endfunction

function religionSelection(who)
    var chardata := GetObjProperty(who, "chardata");
    var religion_pic := 0x9F6;
    var btn_value;
    while (1)
        var input := ReligionGump(who, religion_pic);
        btn_value := input[0]; 

        if (btn_value == 201)
            religion_pic++;
        elseif (btn_value == 210) 
            religion_pic--;
        else
            break;
        endif

        if (religion_pic < 0x9EF)
            religion_pic := 0x9F6;
        elseif (religion_pic > 0x9F6)
            religion_pic := 0x9EF;
        endif
    endwhile
    chardata.+religion := getReligionByPictureId(religion_pic);
    SetObjProperty(who, "chardata", chardata);

    SendSysMessageEX(who, "Sua religião será "+chardata.religion, SSM_INFO);
    return religion_pic;
endfunction

function gameModeSelection(who)
    var chardata := GetObjProperty(who, "chardata");
    var game_mode_pic := 0x9FB;
    var btn_value;
    while (1)
        var input := gameModeGump(who, game_mode_pic);
        btn_value := input[0]; 

        if (btn_value == 201)
            game_mode_pic++;
        elseif (btn_value == 210) 
            game_mode_pic--;
        else
            break;
        endif

        if (game_mode_pic < 0x9FB)
            game_mode_pic := 0x9FC;
        elseif (game_mode_pic > 0x9FC)
            game_mode_pic := 0x9FB;
        endif
    endwhile
    chardata.+game_mode := gameModeByPictureId(game_mode_pic);
    SetObjProperty(who, "chardata", chardata);

    SendSysMessageEX(who, "Seu modo de jogo será "+chardata.game_mode, SSM_INFO);
    return game_mode_pic;
endfunction

function looksSelection(who)
    var chardata := GetObjProperty(who, "chardata");
    looksGump(who, chardata);
endfunction

function pathOfWisdom(who, culture_pic)
    var chardata := GetObjProperty(who, "chardata");
    var btn_value;
    if (chardata.classe != "Sabio")
        return;
    endif
    while (1)
        var input := pathOfWisdomGump(who, culture_pic);
        foreach key in (input.keys)
            btn_value := key;
        endforeach

        if (btn_value == 201)
            chardata.+wisdom_path := "Mago";
            chardata.+magia := "spellcaster";
            var grimorio := CreateItemInBackpack(who, "grimoriodasmagias", 1);
            SetObjProperty(grimorio, "Booktype", "spellcaster");
            SetObjProperty(grimorio, "serialid", who.serial);
            SetObjProperty(grimorio, "marked", who.name + " - " + who.acctname);
            grimorio.newbie := 1;
            grimorio.graphic := 0x0EFA;
            var spellinfo := struct;
            spellinfo.+magic_path := "spellcaster";
            var p1 := CreateItemInBackpack(who, "pergaminhospellcaster1");
            spellinfo.+id := 6;
            SetObjProperty(p1, "spellinfo", spellinfo);
            p1 := CreateItemInBackpack(who, "pergaminhospellcaster1");
            spellinfo.id := 7;
            SetObjProperty(p1, "spellinfo", spellinfo);
            break;
        elseif (btn_value == 202) 
            chardata.+wisdom_path := "Alquimista";
            break;
        elseif (btn_value == 203 && chardata.culture == GULTHRAK) 
            chardata.+wisdom_path := "Xamã";
            chardata.+magia := "Shaman";
            break;
        elseif (btn_value == 203 && chardata.culture != GULTHRAK)
            chardata.magia := "Sacerdote";
            var malhoecinzel := CreateItemInBackpack(who, 0xf40, 1);
            if (chardata.culture == HAROLOTH)
                CreateItemInBackpack(who, 0x166E, 1);
            endif
            chardata.+wisdom_path := "Clérigo";
            break;
        elseif (btn_value == 204) 
            chardata.+wisdom_path := "Engenheiro";
            break;
        else
            SendSysMessageEX(who, "Defina seu caminho da sabedoria", SSM_FAIL);
        endif
    endwhile

    SetObjProperty(who, "chardata", chardata);
    SendSysMessageEX(who, "Seu caminho da sabedoria é "+chardata.wisdom_path, SSM_INFO);
endfunction

function startAdventure(who)   
    MoveObjectToLocation(who, 2173, 481, 1, "britannia", MOVEOBJECT_FORCELOCATION);

    PlaySoundEffectPrivate(who, 0x306, who);
    PlayStationaryEffect(who.x+1, who.y+1, 5, GFX_SMOKE, 10, 20, 0, who.realm);
    sleep(1);
    PlayStationaryEffect(who.x-2, who.y+1, 4, GFX_SMOKE, 10, 20, 0, who.realm);
    sleep(1);
    PlayStationaryEffect(who.x-2, who.y, 2, GFX_SMOKE, 10, 20, 0, who.realm);
    sleep(1);
    PlaySoundEffectPrivate(who, 0x2F4, who);

    PlayObjectCenteredEffect(who, GFX_SMOKE, 0, 5);
    sleep(1);
    startAdventureGump(who);
endfunction

function languageSelection(who, culture_pic)
    var linguasOpt := array{"Imperialis", "Aglâb", "Ahruwën", "Haiei", "Phalk", "Grumnak", "Björ", "Idrith'har", "Comum"};
    var known_languages := array;
    var btn_value;
    SetObjProperty(who, "#LastSpeechTime", ReadGameClock());
    while (1)
        var total_amount := 1;
        known_languages.append(parseLanguageByCulture(who, linguasOpt));
        if(AP_GetTrueStat(who, INTELLIGENCE) >= 40)
            total_amount += cint(((AP_GetTrueStat(who, INTELLIGENCE) - 40) / 30) + 1);
            known_languages.append("Comum");
        endif
        var input := languageSelectionGump(who, culture_pic, linguasOpt, known_languages, total_amount);

        foreach key in (input.keys)
            btn_value := key;
            if (btn_value > 200)
                if (linguasOpt[key-200])
                    known_languages.append(linguasOpt[key-200]);
                endif
            endif

        endforeach
        if (known_languages.size() < total_amount || known_languages.size() > total_amount)
            known_languages := array;
            SendSysMessageEx(who, "Você não escolheu a quantidade correta de idiomas.", SSM_FAIL);
        else
            break;
        endif

    endwhile

    SendSysMessageEX(who, "Você compreende " + CStr(known_languages), SSM_INFO);
    SetObjProperty(who, "linguas_conhecidas", known_languages);
    SetObjProperty(who, "lingua_escolhida", parseLanguageByCulture(who, linguasOpt));
   
endfunction

function calculateBirthdate(who)
    var chardata := GetObjProperty(who, "chardata");

    if (!chardata.birthdate)
        chardata.+birthdate := struct{};
    endif

    var current_year := getYear();

    var chosen_age_index := chardata.caracteristicas_rp["Idade Aparente"];
    var age_value := chardata.idade_real;
    if (age_value == error)
        SendSysMessageEX(who, "Erro ao calcular a idade.", SSM_FAIL);
        return;
    endif
    var birth_year := current_year - age_value;
    var birth_month := MONTHS[getMonthBySign(chardata.sign)].name;
    var birth_day := chardata.birthdate.day;
    
    chardata.birthdate := struct{
        "year" := birth_year,
        "month" := birth_month,
        "day" := birth_day
    };

    // Adicionar a idade inicial e a idade atual
    chardata.+initial_age := age_value;
    chardata.+current_age := age_value;

    SetObjProperty(who, "chardata", chardata);
    return chardata.birthdate;
endfunction

function setCitizenship(who)
    var chardata := GetObjProperty(who, "chardata");
    if (!chardata)
        chardata := struct{};
    endif

    chardata.+citizenship_title := "Plebeu";
    chardata.+available_citizenship_titles := array{
        "Banido",
        "Indigente",
        "Plebeu",
        "Cidadão",
        "Nobre"
    };

    // Definir títulos de nobreza baseados no gênero do personagem
    if (who.gender == 0) // Masculino
        chardata.+nobility_titles := array{
            "Rei",
            "Príncipe",
            "Duque",
            "Marquês",
            "Conde",
            "Visconde",
            "Barão",
            "Cavaleiro",
            "Lorde",
            "Escudeiro"
        };
    else // Feminino
        chardata.+nobility_titles := array{
            "Rainha",
            "Princesa",
            "Duquesa",
            "Marquesa",
            "Condessa",
            "Viscondessa",
            "Baronesa",
            "Dama",
            "Lady",
            "Escudeira"
        };
    endif

    chardata.+current_nobility_title := "Nenhum"; // Inicialmente sem título de nobreza

    // Definir cargos profissionais disponíveis
    chardata.+available_professional_positions := array{
        "Imperador",
        "Mão do Rei",
        "Conselheiro Nobre",
        "Arcebispo",
        "Senador",
        "Serviçal"
    };

    chardata.+current_professional_position := "Nenhum"; // Inicialmente sem cargo profissional

    SetObjProperty(who, "chardata", chardata);
endfunction

function setBirthdate(who)
    var birthdate := calculateBirthdate(who);
    if (birthdate)
        SendSysMessageEX(who, "Data de Nascimento: " + birthdate.day + " de " + birthdate.month + ", Ano " + birthdate.year, SSM_INFO);
    else
        SendSysMessageEX(who, "Não foi possível calcular a data de nascimento.", SSM_FAIL);
    endif
endfunction