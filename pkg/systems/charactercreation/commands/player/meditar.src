use uo;
use os;

include ":charactercreation:createchar";
include "include/say";
include ":charactercreation:chargumps";
include ":tn:characters";
include ":tn:tngumps";
include ":attributes:attributes";
include ":tn:cooldown";
include "include/epicConstants";
include "include/meusProcessos";

program meditar(who, text)
    return  IniciaMeuProcesso(who,@meditarPrincipal,{who});
endprogram

function InitialMeditationCheck(who)
    if (!EquipmentCheck(who))  
        SendSysMessage(who, "Suas mãos precisam estar livres", SSM_FAIL);
        return 0;
    endif
    if (who.hidden || who.concealed)  // Check if player is hidden
        SendSysMessage(who, "Você não pode fazer isso escondido", SSM_FAIL);
        return 0;
    endif
    return 1;  
endfunction

function MeditationConditionsCheck(who, oldx, oldy, start_hp)
    if (oldx != who.x || oldy != who.y)  // Player moved
        SendSysMessage(who, "Você se movimentou e cancelou sua meditação", SSM_FAIL);
        return 0;
    endif
    if (start_hp > AP_GetVital(who, "Hits"))  // Player lost health
        SendSysMessage(who, "Você perdeu sua concentração", SSM_FAIL);
        return 0;
    endif
    if (!EquipmentCheck(who))  // Check if hands became occupied during meditation
        SendSysMessage(who, "Suas mãos precisam estar livres", SSM_FAIL);
        return 0;
    endif
    if (who.hidden || who.concealed)  // Player is hidden
        SendSysMessage(who, "Você não pode fazer isso escondido", SSM_FAIL);
        return 0;
    endif
    return 1;  
endfunction

function EquipmentCheck(who)
	var hand_1 := GetEquipmentByLayer(who, LAYER_HAND1);

	if ( hand_1 )
		if ( (cint(GetObjProperty(hand_1, "cancast")) != 1) )
			return 0;
		endif
	endif

	var hand_2 := GetEquipmentByLayer(who, LAYER_HAND2);
	if ( hand_2 )
		if ( (cint(GetObjProperty(hand_2, "cancast")) != 1)  )
			return 0;
		endif
	endif

	return 1;
endfunction

function meditarPrincipal(params)
    var who := params[1];
    var full_mana := AP_GetVitalMaximumValue(who, MANA);
    var current_mana := AP_GetVital(who, MANA);
    var start_hp := AP_GetVital(who, "Hits");
    var arcane_bows := array{0xFA6D, 0XF997};
    var amt := Cint(AP_GetSkill(who, MAGICLORE)/20);
    var delay := 300;
    if (GetObjPRoperty(who, "chardata").raca == ELFO)
        amt *=2;
        delay := 240;
    endif

     // Track initial player position
	var oldx := who.x;
	var oldy := who.y;

    if (GetCooldown(who, "meditation"))
        SendSysMessage(who, "Você precisa aguardar antes de meditar novamente", SSM_INFO);
        return 0;
    endif

    if (!InitialMeditationCheck(who))
        return 0;  // Fail without applying cooldown
    endif

    setCooldown(who, "meditation", delay);

    while (current_mana < full_mana)
        if (!MeditationConditionsCheck(who, oldx, oldy, start_hp))
            return 0;  // Meditation canceled due to mid-process condition failure
        endif
        PlaySoundEffect(who, 0x20C);
        HealMana(who, Cint(AP_GetSkill(who, MAGICLORE)/20));
        PlayObjectCenteredEffect(who, 0x375a, 10, 80);
        var evento := Wait_For_Event(5);

        if(evento == EV_SPELLCAST)
            SendSysMessage(who, "Voce perdeu sua concentração", SSM_FAIL);
            return 0;
        endif
    endwhile

    if (current_mana == full_mana)
        SendSysMessage(who, "Voce completou sua meditação", SSM_INFO);
    endif
endfunction