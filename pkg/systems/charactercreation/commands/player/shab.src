
use uo;
use vitals;
use math;

include "include/say";
include ":datafile:datafile";
include ":attributes:attributeConstants";
include ":attributes:skillCheck";
include ":attributes:attributes";
include ":containers:containers";
include ":timedScripts:timedScripts";
include ":gumps:gumps";
include ":gumps:yesNo";
include ":gumps:requestGump";
include ":tn:tngumps";
include ":spells:tnmagery";
include "include/client";
include ":itemutils:itemdesc";
include "include/facings";
include ":combat:damage";
include ":fls_core:fls_combat";
include ":blood:blood";
include ":combat:settings";
include ":brainai:npcUtil";
include ":fls_core:fls_characters";
include ":fls_core:packets";
include ":attributes:skillCheck";
include "include/sysEvent";
//include ":cooldown:cooldown";
include "include/epicUtils";

program habilidade(who, text)

//	if (who.cmdlevel < 3)
//		return;
//	endif

	if (who.dead)
		return 1;
	endif

	if (!temHabilidade(who, text) && (who.cmdlevel < 2))
		SendSysMessageEx(who, "Voce nao possui esta habilidade.", SSM_FAIL);
		return 0;
	endif

	if (!text)
		//CreateGumpHabilidade(who);
		return;
	endif

	ProccessHab(who, text);

endprogram


function CreateGumpHabilidade(who)

	UnloadConfigFile(":charactercreation:config/habilidades");

	var gump := GFCreateGump();

        GFDisposable(gump, 0);
	GFResizePic(gump, 0, 25, 3600, 380, 650);
	GFResizePic(gump, 15, 40, 0x13BE, 350, 620);
	GFTextMid(gump, 80, 50, 250, 1153, "Habilidades de Classe");

	var habilidades := GetObjProperty(who, "habilidades");
	if (!habilidades)
		habilidades := dictionary;
	endif

	var habcfg := ReadConfigFile(":charactercreation:config/habilidades");

	var x := 40;
	var y := 80;

	foreach hab in (habilidades.keys())
		var habelem := FindConfigElem(habcfg, hab);
		var desc := GetConfigString(habelem, "desc");
		var uso := GetConfigString(habelem, "uso");
		var nome := GetConfigString(habelem, "nome");
		var nivel := GetConfigInt(habelem, nivel);
		//var gumpid :=  Hex(GetConfigInt(habelem, "gump"));

		//GFGumpPic(gump, x, y+20, gumpid) ;
		GFTextLine(gump, x, y, 1153, nome + " [" + uso + "]" );
		GFHTMLArea( gump, x, y+20, 300, 90, desc, 1150, 0);

		y := y + 110;
	endforeach

	var input := GFSendGump(who, gump);
	input := input[0];



endfunction
