use uo;
use cfgfile;

include "include/say";
include ":gumps:requestGump";
include ":charactercreation:habilidades";
include ":spells:include/swordmage";
include ":attributes:attributes";

program swordmagegem(who, item)

		if (!Cint(GetObjProperty(who, "EspadaArcana")))
			return 1;
		endif

		var prevsword := cint(GetObjProperty(who, "swordmage"));
		var prevsworditem := SystemFindObjectBySerial(prevsword);
		if (prevsworditem == error) //se a espada deu decay ou foi deletada
			prevsword := 0;
		endif
		SendSysMessageEx(who, "Escolha sua arma.", SSM_REQUEST);
		var targ := Target(who);
		if (prevsword ) //se tem o serial
			if (prevsword != targ.serial) //e eh diferente
				if (GetObjProperty(prevsworditem, "broken") != 1) //e nao ta quebrada entao nao pode usar
					SendSysMessageEx(who, "Voce ja tem uma outra arma com suas gemas." , SSM_FAIL);
					return 1;
				else //se ta quebrada aproveita pra deletar as props
					eraseObjPRoperty(prevsworditem, "swordmage");
					eraseObjPRoperty(prevsworditem, "cancast");
					eraseObjPRoperty(prevsworditem, "can_cast");
				endif
			endif
		endif
		var sword := targ;
		if (!targ )
			return;
		else
			if (targ.isa(POLCLASS_WEAPON))
				if(targ.attribute == RANGED)
					SendSysMessageEx(who, "Voce nao pode usar gemas em armas ranged.", SSM_FAIL);
					return;
				endif
				SetObjPRoperty(targ, "swordmage", who.serial);
				SetObjPRoperty(targ, "cancast", 1);
				SetObjPRoperty(targ, "can_cast", 1);
				SetObjProperty(who, "swordmage", targ.serial);
			else
				return;
			endif
		endif
		var gems := getobjproperty(targ, "gems");
		if (!gems)
			gems := dictionary;
		endif
		var maxgems := 5;
		if (TemHabilidade(who, "Espada Prismatica"))
			maxgems := maxgems + 2;
		endif
		if (TemHabilidade(who, "Colecao de Gemas"))
			maxgems := maxgems + 6;
		endif
		if (gems.keys().size() >= maxgems)
			SendSysMessageEx(who, "Voce so pode ter " +  maxgems + "  gemas em uma arma.", SSM_FAIL);
			return;
		endif

		targ := item;
		var gemtype := GetObjProperty(targ, "gemtype");
		if (!targ || gemtype == error )
			SendSysMessageEx(who, "Esta gema nao pode ser utilizada.", SSM_FAIL);
			return;
		else

			var elemental := getElemental(gemtype);
			foreach gem in (gems.keys())
				if ( gemtype == gems[gem].id )
					SendSysMessageEx(who, "Esta arma ja possui esta gema.", SSM_FAIL);
					return;
				endif
				if ( getElemental(gems[gem].id) != "Neutral")
					if ( (elemental != "Neutral") && elemental != getElemental(gems[gem].id))
						if (!TemHabilidade(who, "Espada Prismatica"))
							SendSysMessageEx(who, "Voce nao pode misturar gemas de elementos diferentes.", SSM_FAIL);
							return;
						endif
					endif
				endif
			endforeach

			var powerwords := RequestGump(who, "Escreva as palavras de ativacao que voce quer para esta gema.");
			var st := struct;
			st.+objtype := targ.objtype;
			st.+id := gemtype;
			gems[powerwords] := st;
			SetObjProperty(sword, "gems", gems);
			DestroyItem(targ);
			SetName(sword, sword.desc);
		endif


endprogram
