use uo;
use os;
use cfgfile;
use unicode;

include ":attributes:attributes";
include ":attributes:vitals";
include ":containers:containers";
include ":itemutils:itemdesc";
include "include/client";
include ":fls_magery:basicMagery";
include ":fls_magery:spells";
include "include/sounds";
include ":spells:tnmagery";
include "include/say";
include ":charactercreation:habilidades";
include ":spells:spellbooks";
include ":spells:swordmage";
include "include/facings";
include ":tn:cooldown";

program SpellStarter(params)
    var mobile := params[1]; // Caster
    var spellinfo := params[2]; // spellinfo
    var scroll := params[3]; // item que usou pra castar o spell (scroll, book, varinha ou nada)
    var targ := params[4];
    
    if (!initializeSpellCasting(mobile, spellinfo, scroll))
        return 0;
    endif

    if (!performPreCastingChecks(mobile, spellinfo))
        return 0;
    endif

    if (!consumeResourcesForSpell(mobile, spellinfo, scroll))
        return 0;
    endif

    if (!performCastingProcess(mobile, spellinfo))
        return 0;
    endif

    targ := selectSpellTarget(mobile, spellinfo, targ);
    if (!targ)
        return 0;
    endif

    return finalizeCasting(mobile, spellinfo, targ, scroll);
endprogram

function initializeSpellCasting(mobile, byref spellinfo, scroll)
    if (spellinfo.id != error)
        if (spellinfo.magic_path == "cantripspells")
            WriteCantripSpellInfo(mobile, spellinfo);
        else
            writeSpellInfo(mobile, spellinfo);
        endif
    endif

    if (spellinfo.School == "Evocatium")
        EraseObjProperty(mobile, "#magiasilenciosa");
    endif

    if (GetObjProperty(mobile, "metamorfose") != error && !TemHabilidade(mobile, "Elo Natural"))
        SendSysMessageEx(mobile, "Voce nao pode usar magias metamorfoseado.");
        return 0;
    endif

    if (GetCooldown(mobile, "silence") > 0)
        SendSysMessageEx(mobile, "Voce esta silenciado e nao pode usar magias.");
        return 0;
    endif

    if (!Attach(mobile))
        SendSysMessageEx(mobile, "Voce ja esta fazendo alguma coisa.", SSM_FAIL);
        return 0;
    endif

    if (GetObjProperty(mobile, "#Casting"))
        SendSysMessageEx(mobile, "Voce nao pode invocar um encanto agora.", SSM_FAIL);
        return 0;
    endif

    if (mobile.frozen)
        SendSysMessageEx(mobile, "Voce nao pode invocar um encanto paralisado.", SSM_FAIL);
        EraseObjProperty(mobile, "#Casting");
        return 0;
    endif

    if (!TemHabilidade(mobile, "Vínculo Elemental") && !TemHabilidade(mobile, "Concentracao Macabra"))
        mobile.frozen := 1;
    endif

    return 1;
endfunction

function performPreCastingChecks(mobile, byref spellinfo)
    spellinfo.mana += CInt(spellinfo.mana * GetObjProperty(mobile, "#manapenalty") / 100);

    var can_cast_with_weapon := (spellinfo.School == "Ahtaleloreth");
    var battlemageHabs := {"Concentracao Macabra", "Aura Mortis", "Dominatio Animae", "Vínculo Elemental", "Colheita de Almas", "Campeao das Montanhas", "Visao verdadeira", "Sensibilidade Arcana"};
    var tem_hab := 0;
    foreach hab in battlemageHabs
        if (TemHabilidade(mobile, hab))
            tem_hab := 1;
            break;
        endif            
    endforeach

    if (mobile.squelched && !mobile.npctemplate)
        SendSysMessageEx(mobile, "Voce precisa falar devido os componentes verbais da magia.", SSM_FAIL);
        FailSpell(mobile);
        EraseObjProperty(mobile, "#Casting");
        return 0;
    endif

    if (!EquipmentCheck(mobile) && !mobile.npctemplate && !tem_hab && !can_cast_with_weapon)
        SendSysMessageEx(mobile, "Suas maos precisam estar livres para gesticular os componentes gestuais necessarios para a magia.", SSM_FAIL);
        mobile.frozen := 0;
        EraseObjProperty(mobile, "#medding");
        EraseObjProperty(mobile, "#Casting");
        return 0;
    endif

    return 1;
endfunction

function consumeResourcesForSpell(mobile, spellinfo, scroll)
    var mana_cost := spellinfo.mana;
    var current_mana := AP_GetVital(mobile, MANA);
    var current_stamina := AP_GetVital(mobile, STAMINA);

    if (!mobile.npctemplate)
        if (TemHabilidade(mobile, "Determinacao Arcana"))
            if (current_mana >= mana_cost)
                if (!AP_ConsumeVital(mobile, MANA, mana_cost))
                    SendSysMessageEx(mobile, "Voce nao possui energia arcana suficiente em seu corpo para invocar esta magia!", SSM_FAIL);
                    FailSpell(mobile);
                    EraseObjProperty(mobile, "#Casting");
                    return 0;
                endif
            else
                var remaining_cost := mana_cost - current_mana;
                if (current_mana > 0)
                    AP_ConsumeVital(mobile, MANA, current_mana);
                endif
                if (!AP_ConsumeVital(mobile, STAMINA, remaining_cost))
                    SendSysMessageEx(mobile, "Voce nao possui energia suficiente em seu corpo para invocar esta magia!", SSM_FAIL);
                    FailSpell(mobile);
                    EraseObjProperty(mobile, "#Casting");
                    return 0;
                endif
            endif
        else
            if (!AP_ConsumeVital(mobile, MANA, mana_cost))
                SendSysMessageEx(mobile, "Voce nao possui energia arcana suficiente em seu corpo para invocar esta magia!", SSM_FAIL);
                FailSpell(mobile);
                EraseObjProperty(mobile, "#Casting");
                return 0;
            endif
        endif
    endif

    if (!TNCheckReagents(mobile, spellinfo, scroll))
        if (!TemHabilidade(mobile, "Determinacao Arcana") && !isBloodied(mobile))
            SendSysMessageEx(mobile, "Voce nao possui os componentes materiais necessarios para invocacao desta magia arcana.", SSM_FAIL);
            if (TemHabilidade(mobile, "Mago Precavido"))
                HealMana(mobile, CInt(spellinfo.mana*0.5));
            endif
            FailSpell(mobile);
            EraseObjProperty(mobile, "#Casting");
            return 0;
        endif
    endif

    return 1;
endfunction

function performCastingProcess(mobile, spellinfo)
    mobile.hidden := 0;
    SetObjProperty(mobile, "#Casting", 1);

    if (!mobile.npctemplate)
        performSpellVocalization(mobile, spellinfo);
    endif

    var orig_hp := AP_GetVital(mobile, "Hits");
    var delay := spellinfo.delay + CInt(GetObjProperty(mobile, "#delayspell"));
    var moveCheck_script;
    if (!TemHabilidade(mobile, "Vínculo Elemental"))
        moveCheck_script := Start_Script(":fls_magery:moveCheck/moveCheck", array{mobile, GetPid()});
    endif

    if (!performSpellCycles(mobile, spellinfo, orig_hp))
        return 0;
    endif

    if (!performSpellDelay(mobile, delay, orig_hp))
        return 0;
    endif

    if (moveCheck_script)
        moveCheck_script.kill();
    endif

    mobile.frozen := 0;

    return 1;
endfunction

function performSpellVocalization(mobile, spellinfo)
    if (spellinfo.powerwords && GetObjProperty(mobile, "#magiasilenciosa") == error)
        PrintText(mobile, spellinfo.powerwords);
    endif
    SpeakPowerWords(mobile, spellinfo.id);
    if (spellinfo.prayer[1] && GetObjProperty(mobile, "#magiasilenciosa") == error)
        if (RandomInt(100) < 15)
            var prayer := spellinfo.prayer[RandomInt(spellinfo.prayer.size()) + 1];
            prayer := replaceAccentedCharacters(prayer);
            PrintText(mobile, prayer);
        endif
    endif
endfunction

function replaceAccentedCharacters(text)
    text := StrReplace(text, "&atilde;", "ã");
    text := StrReplace(text, "&Atilde;", "Ã");
    text := StrReplace(text, "&eacute;", "é");
    text := StrReplace(text, "&Eacute;", "É");
    text := StrReplace(text, "&ccedil;", "ç");
    text := StrReplace(text, "&Ccedil;", "Ç");
    text := StrReplace(text, "&ecirc;", "ê");
    text := StrReplace(text, "&Ecirc;", "Ê");
    text := StrReplace(text, "&otilde;", "õ");
    text := StrReplace(text, "&Otilde;", "Õ");
    text := StrReplace(text, "&ocirc;", "ô");
    text := StrReplace(text, "&Ocirc;", "Ô");
    return text;
endfunction

function performSpellCycles(mobile, spellinfo, orig_hp)
    var cycles := Max(spellinfo.cycles, 1);

    while (cycles)
        if (!checkSpellInterruption(mobile, orig_hp))
            return 0;
        endif

        if (GetObjProperty(mobile, "#magiasilenciosa") == error && spellinfo.spelltype != "Swordmage")
            performCastingAnimation(mobile, spellinfo.range);
        endif

        cycles -= 1;
        SleepMS(750);
    endwhile

    return 1;
endfunction

function performSpellDelay(mobile, delay, orig_hp)
    while (delay > 0)
        if (!checkSpellInterruption(mobile, orig_hp))
            return 0;
        endif

        var sleep_time := Min(delay, 50);
        SleepMS(sleep_time);
        delay -= sleep_time;
    endwhile

    return 1;
endfunction

function checkSpellInterruption(mobile, orig_hp)
    if (orig_hp > AP_GetVital(mobile, "Hits") && (!TemHabilidade(mobile, "Vínculo Elemental") && !TemHabilidade(mobile, "Concentracao Macabra")))
        SendSysMessageEx(mobile, "Voce nao conseguiu se concentrar o suficiente para invocar esta magia.", SSM_FAIL);
        FailSpell(mobile);
        if (TemHabilidade(mobile, "Mago Precavido"))
            HealMana(mobile, CInt(GetObjProperty(mobile, "#Casting").mana * 0.5));
        endif
        if (!GetObjProperty(mobile, "#magiasilenciosa"))
            FailSpell(mobile);
        endif
        return 0;
    endif

    if (Events_Waiting())
        SendSysMessageEx(mobile, "Voce nao conseguiu se concentrar o suficiente para invocar esta magia.", SSM_FAIL);
        FailSpell(mobile);
        if (!GetObjProperty(mobile, "#magiasilenciosa"))
            FailSpell(mobile);
        endif

        if (TemHabilidade(mobile, "Mago Precavido"))
            HealMana(mobile, CInt(GetObjProperty(mobile, "#Casting").mana * 0.5));
        endif
        return 0;
    endif

    return 1;
endfunction

function performCastingAnimation(mobile, range)
    case (range)
        "Distancia":
            PerformAction(mobile, ANIM_CAST_DIR);
            break;
        "Area":
            PerformAction(mobile, ANIM_CAST_AREA);
            break;
        default:
            PerformAction(mobile, ANIM_CAST_DIR);
    endcase
endfunction

function selectSpellTarget(mobile, spellinfo, targ)
    if (!targ)
        case (spellinfo.alvo)
            "Self":
                targ := mobile;
            "Unico":
                SendSysMessageEx(mobile, "Escolha o alvo da magia.", SSM_REQUEST);
                var noto := TGTOPT_NEUTRAL;
                if (spellinfo.align == "Harmful")
                    noto := TGTOPT_HARMFUL;
                elseif (spellinfo.align == "HELPFUL")
                    noto := TGTOPT_HELPFUL;
                endif
                targ := Target(mobile, noto);
            "Area":
                SendSysMessageEx(mobile, "Escolha o ponto onde a magia sera castada.", SSM_REQUEST);
                targ := TargetCoordinates(mobile);
        endcase

        if (!targ)
            SendSysMessageEx(mobile, "Voce cancelou a magia.", SSM_FAIL);
            FailSpell(mobile);
            return 0;
        endif

        TurnObjectToward(mobile, targ.x, targ.y);
    endif

    if (!checkTargetValidity(mobile, targ, spellinfo))
        return 0;
    endif

    return targ;
endfunction

function checkTargetValidity(mobile, targ, spellinfo)
    if (GetCooldown(targ, "repeal") > 0)
        SendSysMessageEx(mobile, "O alvo esta invulneravel a magias.", SSM_FAIL);
        return 0;
    endif

    if (GetCooldown(targ, "corpofechado") > 0)
        SendSysMessageEx(mobile, "A magia nao funcionou no alvo, alem disso voce sente suas energias sendo esgotadas.", SSM_FAIL);
        var vont := GetResist(targ, VONTADE);
        DamageMANA(mobile, vont/3);
        return 0;
    endif

    if (spellinfo.alvo != "Area")
        if (!CheckLineOfSight(mobile, targ))
            SendSysMessageEx(mobile, "Voce nao ve o alvo.", SSM_FAIL);
            FailSpell(mobile);
            return 0;
        endif
    else
        if (!CheckLOSAt(mobile, targ.x, targ.y, targ.z))
            SendSysMessageEx(mobile, "O ponto que voce selecionou esta fora da sua linha de visao.", SSM_FAIL);
            FailSpell(mobile);
            return 0;
        endif
    endif

    return 1;
endfunction

function finalizeCasting(mobile, spellinfo, targ, scroll)
    var attribute := MAGERY;
	if (TemHabilidade(mobile, "Sensibilidade Arcana"))
		attribute := MAGICLORE;
	endif

    var difficulty := CInt(spellinfo.Difficulty);

    var skill_check := SkillCheck(mobile, attribute, difficulty);

    if (skill_check > 0)
        if (scroll.isA(POLCLASS_ITEM))
            consumeScroll(mobile, scroll);
        endif

        CastSpell(mobile, spellinfo, targ);
    else
        handleFailedSpell(mobile, spellinfo);
    endif

    EraseObjProperty(mobile, "#Casting");
    return 1;
endfunction

function consumeScroll(mobile, scroll)
    if (!TemHabilidade(mobile, "Reaproveitar Pergaminho"))
        SubtractAmount(scroll, 1);
    else
	    var attrib_value := MAGERY;
		if (TemHabilidade(mobile, "Sensibilidade Arcana"))
			attrib_value := MAGICLORE;
		endif
        var chance := RandomIntMinMax(0, 100);
        if (chance > attrib_value)
            SubtractAmount(scroll, 1);
        endif
    endif
endfunction

function handleFailedSpell(mobile, spellinfo)
    if (TemHabilidade(mobile, "Mago Precavido"))
        HealMana(mobile, CInt(spellinfo.mana * 0.5));
    endif
    
    if (!GetObjProperty(mobile, "#magiasilenciosa"))
        FailSpell(mobile);
    endif
    
    SendSysMessageEx(mobile, "Voce falhou em invocar a magia.", SSM_FAIL);
endfunction