use os;
use uo;
use util;

include ":destroyable:include/destroyItemPersist";
include ":destroyable:include/destroyItem";

const T_HORA := 3600;

program vigilanteDestruiveis()
	while(true)
		sleep(10);
		var retornoListaItens := PegaListaItens(10);
		
		foreach infoItem in (retornoListaItens.itens)
			CriaItemMarcado(infoItem);
			Sleepms(4);
		endforeach

		var deedCounter := 0;
		foreach deed in (retornoListaItens.itensDeed)
			var novosSerials := array;
			var novosItens := array;
			deedCounter += 1;
			foreach  item in deed
				var novoItem := CriaItemMarcado(item);
				novosSerials.append(novoItem.serial);
				novosItens.append(novoItem);
				
				Sleepms(2);
			endforeach
			
			foreach novoItem in novosItens
				SetObjProperty(novoItem,"ItemsCreatedSerials",novosSerials);
				Sleepms(2);
			endforeach
			Sleepms(4);
		endforeach
		if(retornoListaItens.itens.size() > 0 )
			Print("[VigilanteDestruíveis] -- " + retornoListaItens.itens.size() + " Itens destruídos recriado com sucesso.");
		endif

		if(deedCounter > 0)
			Print("[VigilanteDestruíveis] -- " + deedCounter + " Deeds destruídas recriadas com sucesso.");
		endif
	endwhile
endprogram

function CriaItemMarcado(infoItem)
	var copy;
	if(infoItem.template != error)
		copy := CreateItemAtLocationFromTemplate(infoItem.x, infoItem.y, infoItem.z, infoItem.realm, infoItem.template);
	else
		copy := CreateItemAtLocation(infoItem.x, infoItem.y, infoItem.z,infoItem.objtype, infoItem.amount,infoItem.realm);
	endif
	copy.movable := infoItem.movable;
	var atributos := MontaAtributosItem(copy);
	copy.hp := atributos.durabTotal;
	RemoveItemMarcado(infoItem.serial);
	return copy;
endfunction