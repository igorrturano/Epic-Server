include "/include/epicPropNames";
include ":gumps:/include/epicGumps";
include ":gumps:/include/posicaoGump";
include ":crafting:/gumps/fabricacaoGumps";
include ":crafting:/include/fabricacaoUtil";
include ":crafting:/include/tratamentoProduto";

program GerenteTratamentoProduto(parametros)
	var quem			:= parametros[1];
	var produto			:= parametros[2];
	var pidGerente		:= parametros[3];
	var estacao			:= parametros[4];

	var gump;
	var posicao2D;
	var apelidoGump := "gumpTratamentoProduto";  
	var retorno := true;
	var sessao := InicializaSessao(quem, produto, estacao);
	var processoGerente := GetProcess(pidGerente);

	while(retorno)
		
		var propTratamento := GetObjProperty(produto, PROPNAME_FABRICADO_TRATAMENTO);
		if(propTratamento)
			sessao.sucessos := propTratamento.sucessos;
			sessao.falhas := propTratamento.falhas;
			sessao.ciclos := propTratamento.ciclos;
			sessao.ultimoSucesso := propTratamento.ultimoSucesso;
		endif

		var posicaoProp := GetObjProperty(quem, PROPNAME_POSICAO_GUMP);
		posicao2D := PegaPosicaoGump(quem, apelidoGump);

		gump := MontaTratamentoGump(posicao2D.x,posicao2D.y, sessao);
		retorno := SendDialogGump(quem, gump.layout,gump.data);

		if(retorno[0] == 2)
			GFCloseGump(quem,ATUALIZA_POS_ID);
			EnviaGumpPosicao(quem, GetPid(),apelidoGump);
		elseif(retorno[0] == 5)// Retorno da atualização de ciclo.
		elseif(retorno[0] == 4)
			sessao.fazerTodos := !sessao.fazerTodos;
			processoGerente.sendEvent(struct {id := EV_TODOS_ALTERADO , fazerTodos := sessao.fazerTodos});
		elseif(retorno[0] == ATUALIZA_POS_RESPOSTA_ID) //quem manda esse retorno é o gump de reposicionamento.
		else
			processoGerente.sendEvent(struct {id := EV_CANCELADO});
			retorno := false;
		endif
	endwhile
endprogram

function PreparaTratamentoGump (quem , produto)

	var parametrosGump := struct;
endfunction

function InicializaSessao (quem , produto, estacao)
	var sessao := struct;
	var propFabricado := GetObjProperty(produto,PROPNAME_FABRICADO);
	var propTratamento := GetObjProperty(produto,PROPNAME_FABRICADO_TRATAMENTO);
	var craft_config    := ReadConfigFile(":metalworking:blacksmithy");//TODO alterar para a solução definitiva de como ler as configs de craft; 

	sessao.+nomeItem := propFabricado.receita.desc;
	sessao.+sucessosNecessarios := propFabricado.receita.sucessosNecessarios;
	sessao.+maximoFalhas := PegaMaximoFalhas(produto);
	sessao.+dificuldade := PegaDificuldade(quem, craft_config[propFabricado.receita.objtype],propFabricado.receita.pericia, produto, estacao);
	sessao.+sucessos := propTratamento.sucessos ? propTratamento.sucessos : 0;
	sessao.+falhas := propTratamento.falhas ? propTratamento.falhas : 0;
	sessao.+ciclos := propTratamento.ciclos ? propTratamento.ciclos : 0;
	sessao.+ultimoSucesso := propTratamento.ultimoSucesso;
	sessao.+fazerTodos := 1;

	return sessao;
endfunction