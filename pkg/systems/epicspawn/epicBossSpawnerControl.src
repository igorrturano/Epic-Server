use uo;
use os;
use util;
use basicio;
include ":attributes:attributes";
include ":tn:boss";
include ":combat:hitscripts";
include "include/epicNPCUtils";
include ":epicspawn:epicBoss";

program epicBossSpawnerControl(spawner)
    var bossTemplate := GetObjProperty(spawner, "BossTemplate");
    var bossStruct := GetObjProperty(spawner, "BossStruct");
    var childSerial := GetObjProperty(spawner, "ChildSerial");
    var spawnQueue := GetObjProperty(spawner, "SpawnQueue");
    
    // Initialize if not set
    if (!bossTemplate || bossTemplate == "NONE")
        // Wait until the boss template is set
        while (!bossTemplate || bossTemplate == "NONE")
            sleep(10);
            bossTemplate := GetObjProperty(spawner, "BossTemplate");
            bossStruct := GetObjProperty(spawner, "BossStruct");
            
            // If we have a boss structure, we don't need a template
            if (bossStruct)
                break;
            endif
        endwhile
    endif
    
    // Initialize spawn queue if not set
    if (!spawnQueue)
        spawnQueue := 0; // Start with 0 to spawn immediately
        SetObjProperty(spawner, "SpawnQueue", spawnQueue);
    endif
    
    // Initialize child serial if not set
    if (!childSerial)
        childSerial := "Empty";
        SetObjProperty(spawner, "ChildSerial", childSerial);
    endif
    
    var resetMe;
    
    while (spawner)
        resetMe := GetObjProperty(spawner, "ResetMe");
        if (resetMe)
            KillBoss(spawner);
            ResetSpawnQueue(spawner);
            EraseObjProperty(spawner, "ResetMe");
        endif
        
        childSerial := GetObjProperty(spawner, "ChildSerial");
        spawnQueue := GetObjProperty(spawner, "SpawnQueue");
        
        // Check if boss is dead or missing
        if (childSerial != "Empty")
            var boss := SystemFindObjectBySerial(childSerial);
            if (!boss || boss.dead || boss.master)
                childSerial := "Empty";
                SetObjProperty(spawner, "ChildSerial", childSerial);
                ResetSpawnQueue(spawner);
            endif
        endif
        
        // Spawn boss when timer reaches 0
        if (childSerial == "Empty")
            if (spawnQueue == 0)
                // Check if players are nearby before spawning
                while (HasPlayerNear(spawner))
                    sleep(60);
                endwhile
                
                // Spawn the boss
                var bossSerial := SpawnBoss(spawner);
                if (bossSerial)
                    childSerial := bossSerial;
                    SetObjProperty(spawner, "ChildSerial", childSerial);
                    spawnQueue := "Active";
                    SetObjProperty(spawner, "SpawnQueue", spawnQueue);
                endif
            else
                // Decrement the timer
                spawnQueue := spawnQueue - 1;
                SetObjProperty(spawner, "SpawnQueue", spawnQueue);
            endif
        endif
        
        sleep(60); // Check every minute
    endwhile
endprogram

function KillBoss(spawner)
    var childSerial := GetObjProperty(spawner, "ChildSerial");
    if (childSerial && childSerial != "Empty")
        var boss := SystemFindObjectBySerial(childSerial);
        if (boss && !boss.master)
            SetObjProperty(boss, "summoned", 1);
            SetObjProperty(boss, "spawnkill", 1);
            RevokePrivilege(boss, "invul");
            ApplyRawDamage(boss, GetVital(boss, HITS) + 3);
        endif
    endif
    
    SetObjProperty(spawner, "ChildSerial", "Empty");
    SetObjProperty(spawner, "SpawnQueue", 0);
endfunction

function ResetSpawnQueue(spawner)
    var minDelay := GetObjProperty(spawner, "MinDelay");
    var maxDelay := GetObjProperty(spawner, "MaxDelay");
    
    minDelay := minDelay ? CInt(minDelay) : 60;  // Default to 60 minutes
    maxDelay := maxDelay ? CInt(maxDelay) : 120; // Default to 120 minutes
    
    if (minDelay < 1)
        minDelay := 1;
    endif
    
    if (maxDelay < 1)
        maxDelay := 1;
    endif
    
    var delay;
    if (minDelay == maxDelay)
        delay := minDelay;
    else
        delay := RandomInt(maxDelay - minDelay) + minDelay;
    endif
    
    SetObjProperty(spawner, "SpawnQueue", delay);
endfunction

function SpawnBoss(spawner)
    var bossTemplate := GetObjProperty(spawner, "BossTemplate");
    var bossStruct := GetObjProperty(spawner, "BossStruct");
    var range := GetObjProperty(spawner, "Range");
    range := range ? CInt(range) : 5;
    
    var x, y, z, success := 0;
    var attempts := 0;
    var boss;
    
    while (success == 0 && attempts < 10)
        if (range == 0)
            x := spawner.x;
            y := spawner.y;
            z := spawner.z;
        else
            x := spawner.x + RandomInt(2 * range) - range;
            y := spawner.y + RandomInt(2 * range) - range;
            z := GetWorldHeight(x, y, spawner.realm);
        endif
        
        // Try to create the boss
        if (bossStruct)
            boss := CreateEpicBoss(bossStruct, x, y, z, spawner.realm);
        else
            boss := CreateNpcFromTemplate(bossTemplate, x, y, z, 0, spawner.realm);
        endif
        
        if (boss && boss != error)
            SetObjProperty(boss, "epicspawner", spawner.serial);
            return boss.serial;
        endif
        
        attempts += 1;
    endwhile
    
    // If all attempts fail, try at the exact spawner location
    if (bossStruct)
        boss := CreateEpicBoss(bossStruct, spawner.x, spawner.y, spawner.z, spawner.realm);
    else
        boss := CreateNpcFromTemplate(bossTemplate, spawner.x, spawner.y, spawner.z, 0, spawner.realm);
    endif
    
    if (boss && boss != error)
        SetObjProperty(boss, "epicspawner", spawner.serial);
        return boss.serial;
    endif
    
    return 0;
endfunction 