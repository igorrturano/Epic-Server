use uo;
use os;
use cfgfile;
use util;

include ":itemutils:objtype";
include ":itemutils:canAccess";
include ":attributes:attributeConstants";
include ":attributes:skills";
include ":attributes:attributes";
include "include/say";
include ":charactercreation:habilidades";
include ":mechanicalapitude:lockpick_minigame";
include ":keys:key";
include "include/string";

program skill_lockpicking(me, lockpick)
    EraseObjProperty(me, "IsMeditating");
    EraseObjProperty(me, "HealTimer");
    var sucesso := 0;

    // Primeira verificação de mãos livres
    if (!maolivre(me, 2))
        SendSysMessageEx(me, "Voce precisa ter as duas maos livres para manusear a gazua.", SSM_FAIL);
        return 0;
    endif

    if(!can_access(me, lockpick))
        return 0;
    endif

    if(lockpick.movable == 0)
        SendSysMessageEx(me, "Voce nao pode usar isto.", SSM_FAIL);
        return 0;
    endif

    if (!ReserveItem(lockpick))
        return 0;
    endif

    if (GetObjProperty(me, "escondido"))
        me.hidden := 1;
        SetObjProperty(me, "escondido", 0);
    endif

    SendSysMessageEx(me, "O que voce deseja fazer com isto?", SSM_REQUEST);
    var chest := Target(me);
    if (!chest)
        SendSysMessageEx(me, "Cancelado.", SSM_FAIL);
        return 0;
    endif

    if ((!Accessible(me, chest)) || (!Accessible(me, lockpick)))
        SendSysMessageEx(me, "Voce nao alcanca o alvo!", SSM_FAIL);
        return 0;
    endif

    if (Distance(me, chest) > 2)
        SendSysMessageEx(me, "Voce esta muito distante.", SSM_FAIL);
        return 0;
    endif

    if (GetObjProperty(chest, "level") || GetObjProperty(chest, "levelPlayerLock"))
        if (!maolivre(me, 2))
            SendSysMessageEx(me, "Voce precisa estar com as maos livres.", SSM_FAIL);
            return 0;
        endif

        if(valorInicial(me, AWARENESS) >= 40)
            if(me.hidden)
                SendSysMessageEx(me, "Tenta arrombar a fechadura. [silencioso]", SSM_INFO);
            else
                PrintTextAbove(me, "*Tenta arrombar a fechadura [silencioso]*");
            endif
        else
            PrintTextAbove(me, "*Tenta arrombar a fechadura [barulhento]*");
            me.hidden := 0;
            PlaySoundEffect(chest, 0x242);
        endif

        // Verifica mãos livres durante o processo
        for i := 1 to 5
            if (!maolivre(me, 2))
                SendSysMessageEx(me, "Voce nao pode usar sua gazua com as maos ocupadas.", SSM_FAIL);
                return 0;
            endif
            Sleep(1);
        endfor

        sucesso := PickTreasureChest(me, lockpick, chest);
    else
        SendSysMessageEx(me, "Esse nao e um alvo valido.", SSM_FAIL);
    endif
    
    ReleaseItem(lockpick);
    return sucesso;
endprogram

function PickTreasureChest(me, lockpick, chest)
    var lvl := CInt(GetObjProperty(chest, "level"));
    
    if (!chest.locked)
        SendSysMessageEx(me, "O alvo nao parece estar tracado.", SSM_INFO);
        return 0;
    endif

	if (GetObjProperty(chest, "fechadura_quebrada") == 1)
        SendSysMessageEx(me, "A fechadura está quebrada!", SSM_FAIL);
        return 0;
	endif
	
    if(valorInicial(me, AWARENESS) >= 40)
        if(me.hidden)
            SendSysMessageEx(me, "*Arrombando a fechadura. [silencioso]*", SSM_INFO);
        else
            PrintTextAbove(me, "*Arrombando a fechadura. [silencioso]*");
        endif
    else
        PrintTextAbove(me, "*Arrombando a fechadura. [barulhento]*");
        me.hidden := 0;
        PlaySoundEffect(chest, 0x0242);
    endif
    
    Sleep(1);

    var playerLock := Cint(GetObjProperty(chest, "levelPlayerLock"));
    var diff;
    
    if(!playerLock)
        case (lvl)
            1: diff := 15;
            2: diff := 40;
            3: diff := 60;
            4: diff := 86;
            5: diff := 90;
            6: diff := 110;
            default: diff := 40;
        endcase
    else
        diff := playerLock;
    endif

    var diffmod := Cint(GetObjProperty(me, "conhecimentosobrefechaduras")) * 5;
    diff := diff - diffmod;
    if (diff <= 0)
        diff := 5;
    endif

    var check := SkillCheck(me, MECHANICS, diff);
	var mec_skill := AP_GetSkill(me, MECHANICS);
	var magic_chest := (GetObjProperty(chest, "level") == 6);
	var hab1_mchest := temHabilidade(me, "Sensibilidade Arcana");
	var hab2_mchest := temHabilidade(me, "Desbravador Nato");

if ( hab1_mchest || hab2_mchest)
	if (magic_chest || (diff > mec_skill + 15 && diff < mec_skill + 40) )
	if(mini_game(me, diff, mec_skill, chest))
    //set_critical(1);
        KP_ToggleLock(chest, me); // Coloque aqui primeiro
        SetObjProperty(chest, "arrombado", "" + me.name);
		SetObjProperty(chest, "locktime", polcore().systime);
        PlaySoundEffect(chest, 0x0200);
        PlayObjectCenteredEffect(chest, 0x3763, 1, 16);
        //set_critical(0);
        SendViewContainer(me, chest);
		return 1;
    else
		SendSysMessageEx("Voce falhou!", SSM_FAIL);
		return;
	endif
	endif
	endif


if (magic_chest && !hab1_mchest && !hab2_mchest)
	SendSysMessageEx(me, "Você não sabe lidar com fechaduras mágicas!", SSM_FAIL);
endif

    if (check > 0)
        if(valorInicial(me, AWARENESS) >= 40)
            SendSysMessageEx(me, "*Destrancou [silencioso]*", SSM_INFO);
            PrintTextAbovePrivate(chest, "*$*", me);
        else
            PrintTextAbove(me, "*Destrancou [barulhento]*");
            me.hidden := 0;
            PlaySoundEffect(chest, 0x200);
            SendSysMessageEx(me, "*Destrancou [barulhento]*", SSM_INFO);
        endif

        set_critical(1);
        SetObjProperty(chest, "arrombado", "" + me.name);
        SetObjProperty(chest, "locktime", ReadGameClock());
        chest.locked := 0;
        set_critical(0);
        return 1;
    else
        if(me.hidden)
            me.hidden := 0;
        endif
        
        PlaySoundEffect(chest, 0x122);
        PrintTextAbove(me, "*Falhou em arrombar*");
        Sleepms(500);
        
        if (!temHabilidade(me, "Especialista em Invasoes") && check < -20)
            PlaySoundEffect(chest, 0x0F3);
            SendSysMessageEx(me, "Sua gazua quebrou!", SSM_FAIL);
            SubtractAmount(lockpick, 1);
        endif
        return 0;
    endif


endfunction
