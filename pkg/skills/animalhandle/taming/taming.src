use cfgfile;
use uo;
use os;
use util;

include ":attributes:attributes";
include ":attributes:stats";
include ":brainAI:include/npcCommands";
include ":gumps:epicGumps";
include "include/say";
include ":taming:taming";
include ":mounts:mounts";
include ":tn:characters";
include ":tn:boss";
include ":charactercreation:habilidades";
//include ":damage:damage"; para os criticos talvez?

const START_Y	   := 91;
const END_Y	   := 311;
const BACKGROUND   := 0xBB8;
const FOREGROUND   := 0xDAC;
const INIT_DET_PAGE := 10;

var template;
var index_list;
var info_cfg;
var entries_list := dictionary;
var btn_maxId := 2;
var new_list := array;
var det_page := INIT_DET_PAGE; //numero da pagina de detalhes

set_script_option(SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES, 1);

program TamingSkill(who)
	if ( GetObjProperty(who, "#medding") )
		SendSysMessageEx(who, "Você não pode adestrar nada agora.", SSM_FAIL);
		return;
	elseif (GetObjProperty(who, "#tamewait") > ReadGameClock() )
		SendSysMessage(who, "Você precisa esperar para usar esta skill de novo.", SSM_FAIL);
		return;
	endif

//checar se já tem animal fidelizado
	var check_bond := 0;
	var petsi := GetObjProperty(who, "TamedPets");
	var habs := TemHabilidade(who, "Espreita Selvagem");
		foreach serial in petsi
			var pety := SystemFindObjectBySerial(serial);
			if (GetObjProperty(pety, "bond") == "fiel")
				if (!habs )
					check_bond := 1;
				else
					check_bond := 2;
				endif
			endif
		endforeach

	var yn_gump := GFECreateGump("Menu de Trato de Animais", 275, 290);

	GFAddButton(yn_gump, 20, (73), 2117, 2118, GF_CLOSE_BTN, 1);
	GFTextLine(yn_gump, 40, 70, 1153, "Adestrar Animal.");

	GFAddButton(yn_gump, 20, (93), 2117, 2118, GF_CLOSE_BTN, 2);
	GFTextLine(yn_gump, 40, 90, 1153, "Informações sobre o animal.");

	if (TemHabilidade(who, "Mestre de Feras"))
		GFAddButton(yn_gump, 20, (113), 2117, 2118, GF_CLOSE_BTN, 3);
		GFTextLine(yn_gump, 40, 110, 1153, "Despertar");
	endif

	GFTextLine(yn_gump, 25, 133, 1153, "Libertar Animal:");

	if ( (check_bond == 0 || check_bond == 2) && (AP_GetSkill(who, HANDLEANIMAL) >= 1) )
		GFAddButton(yn_gump, 190, (253), 2117, 2118, GF_CLOSE_BTN, 4);
		GFTextLine(yn_gump, 210, 250, 1153, "Fidelizar?");
	endif

	var y := 150;
	var i := 1;
	var pets := GetObjProperty(who, "TamedPets");
	foreach serial in pets
		var pet := SystemFindObjectBySerial(serial);
		var text_fiel := "";
		if (GetObjProperty(pet, "bond") == "fiel")
			text_fiel := " *fiel*";
			GFTextLine(yn_gump, 40, y, 0xf7, "" + pet.name + text_fiel);
		else
			GFTextLine(yn_gump, 40, y, 1153, "" + pet.name);
			if (GetObjProperty(pet, "Fidelizar?") == "nao")
				GFGumpPic(yn_gump, 190, y+4, 2437);
			elseif (GetObjProperty(pet, "Fidelizar?") == "sim")
				GFGumpPic(yn_gump, 190, y+4, 2436);
			endif
		endif
		if (!GetObjProperty(pet, "summoned"))
			GFAddButton(yn_gump, 20, y+4, 2103, 2104, GF_CLOSE_BTN, (100+i));
		endif
		i := i + 1;
		y := y + 20;
	endforeach

	var input := GFSendGump(who, yn_gump);
	input := input[0];

	if (input == 1)
		taming(who);
	elseif (input == 2)
		Start_Script(":animallore:animalLore", who);
	elseif (input == 3)
		Teach(who);
	elseif (input > 100)
		SendSysMessageEx(who, "Você libertou seu animal.", SSM_INFO);
		ErasePet(who, pets[input-100]);
		destama(pets[input-100]);
	elseif (input == 4) // botão para poder fidelizar
		SendSysMessageEx(who, "Qual pet você quer poder fidelizar? OBS: O processo será resetado para qualquer outro pet com fidelização iniciada!", SSM_INFO);
		var targx := target(who);
		if (GetObjProperty(targx,"owner") != who.serial)
			SendSysMessageEx(who, "Esse animal não lhe pertence!", SSM_FAIL);
			return;
		endif
		//resetar os demais para "nao" e deixa só o selecionado como "sim"
		var pets_all := GetObjProperty(who, "TamedPets");
		var habs := TemHabilidade(who, "Espreita Selvagem");
		foreach serial in pets_all
			var pet_each := SystemFindObjectBySerial(serial);
			if ( habs && GetObjProperty(pet_each, "bond") == "fiel")
			else
			SetObjProperty(pet_each, "Fidelizar?", "nao");
			EraseObjProperty(pet_each, "bond");
			endif
		endforeach
		SetObjProperty(targx, "Fidelizar?", "sim");
		SendSysmessage(who, ""+targx.name+" pode ser fidelizado, todos os demais agora não");

	endif

	EraseObjProperty(who, "#medding");
endprogram

function taming(who)

	if( who.hidden )
		who.hidden := 0;
	endif

	SendSysMessageEx(who, "Que animal você deseja adestrar?", SSM_REQUEST);
	if( who.hidden )
		who.hidden := 0;
	endif
	var targ := target(who);

	var skill := AP_GetSkill(who, HANDLEANIMAL);

	var bonus := 0;
	if ( !targ.IsA(POLCLASS_NPC) )
		SendSysMessageEx(who, "Cancelado", SSM_FAIL);
		return;
	elseif ( targ.script[":ghaia:tamed"] )
		SendSysMessageEx(who, targ.name+" não pode ser adestrado.", SSM_FAIL);
		return 0;
	elseif ( (GetNumPets(who) + GetPetCost(targ)) > GetMaxPets(who) )
		SendSysMessageEx(who, "Este animal excede a sua capacidade atual de animais domesticados.", SSM_FAIL);
		return 0;
	endif

	if(!CheckLineOfSight(who, targ))
		SendSysMessage(who, "Você não pode ver isso!");
		return;
	endif

	if (isBoss(targ))
		SendSysMessageEx(who, "Essa criatura não aceita ser domesticada.", SSM_FAIL);
		return 0;
	endif

	var cfg := ReadConfigFile(":*:npcdesc");
	var npctemplate := targ.npctemplate;
	npctemplate := npctemplate[10, len(npctemplate)-9];
	cfg := cfg[npctemplate];
	if ( !cfg.TameDifficulty )
		SendSysMessageEx(who, "Voce não pode adestrar "+targ.name+".", SSM_FAIL);
		return;
	endif

	var info := struct;
	info.+x := who.x;
	info.+y := who.y;
	info.+facing := who.facing;
	info.+difficulty := cfg.TameDifficulty;
	if (info.difficulty > (skill + 15))
		SendSysMessageEx(who, "Você não pode tentar adestrar "+targ.name+" ainda.");
		return 0;
	endif

	cfg := 0;

	SetObjProperty(who, "#tamewait", ReadGameClock()+5);


	while( TameLoop(who, targ, info) )
			SetObjProperty(who, "#tamewait", ReadGameClock()+5);

			sleep(3);
			if ( SkillCheck(who, HANDLEANIMAL, CInt(info.difficulty)) > 0 )
				SendSysMessageEx(who, "Você ganhou a confiança de "+targ.name+".", SSM_INFO);
				targ.SetMaster(who);
				var erase_selvagem := GetObjProperty(targ, "Selvagem");
				SetObjProperty(targ, "owner", who.serial);
				SetObjProperty(targ, "name", targ.name);
				SetObjproperty(targ, "script", targ.script);
				SetObjProperty(targ,"happiness", 50);
				SetObjProperty(targ, "AntigoTreinadorID", who.serial);
				SetObjProperty(targ, "Fidelizar?", "nao");

				var time := ReadGameClock();
				SetObjProperty(targ,"countercheck", time);
				if (erase_selvagem == 1)
					EraseObjProperty(targ, "Selvagem");
					EraseObjProperty(targ, "Critic");
				endif
				targ.script := ":ghaia:tamed";
				RestartScript(targ);

				Run_Script_To_Completion(":death:npcdeath", {targ});

				var tamed := GetObjProperty(who, "TamedPets");
				if ( !tamed )
					tamed := array;
				endif
				tamed.append(targ.serial);
				SetObjProperty(who, "TamedPets", tamed);

				break;
			endif

		if ( events_waiting() )
			clear_event_queue();
		endif


	endwhile

endfunction

function TameLoop(who, targ, byref info)
	var my_hostiles := ListHostiles(who, 15);
	var targ_hostiles := ListHostiles(targ, 15);

	if ( targ.master )
		SendSysMessage(who, targ.name+" não pode ser adestrado.", SSM_FAIL);
		return 0;
	elseif ( targ_hostiles.size() > 0 )
		SendSysMessageEx(who, "alguém está atacando "+targ.name+" .", SSM_FAIL);
		return 0;
	elseif ( my_hostiles.size() > 0 )
		SendSysMessageEx(who, "Você não pode adestrar "+targ.name+" enquanto está sendo atacado", SSM_FAIL);
		return 0;
	elseif ( (who.x != info.x) || (who.y != info.y) || (who.facing != info.facing) )
		SendSysMessageEx(who, "Você desviou sua atenção.", SSM_FAIL);
		return 0;
	elseif ( Distance(who, targ) > 2 )
		SendSysMessageEx(who, "Voêe está muito longe.", SSM_FAIL);
		return 0;
	endif

	PrintText(who, "*tentando adestrar " + targ.name + "*");

	var ownerarray := GetObjProperty(targ, "LastOwners"); //identifica se teve último dono
if(!ownerarray)
    ownerarray := {};
 endif
	var check := SkillCheck(who, HANDLEANIMAL, info.difficulty);
	if (( check > 0 ) || (who.serial in ownerarray) )
		SendSysMessageEx(who, ""+targ.name+" parece ser seu amigo.", SSM_INFO);
		AI_MoveXY(targ, info.x, NEMOVE_TOWARD, NEMOVE_WALK, WAKEUP, 1);

		return 1;
	elseif (check < -15 )
		var dist := Distance(who, targ);
		SetObjProperty(targ, "#ForceFlee", 1);
		AI_Move(targ, who, NEMOVE_AWAY, NEMOVE_RUN, NOWAKE, 100);
		sleepms(160);
		if ( dist == Distance(who, targ) )
			SendSysMessageEx(who, targ.name+" não aceitou você como dono.", SSM_FAIL);
		else
			SendSysMessageEx(who, "Você assustou "+targ.name+" .", SSM_FAIL);
		endif
		return 0;
	else
		SendSysMessageEx(who, "Você falhou ao domar esse animal!", SSM_FAIL);
		return 0;
	endif
endfunction

function Teach(who)
	if (!TemHabilidade(who, "Mestre de Feras") )
		SendSysMessageEx(who, "Você não tem a habilidade para treinar animais domesticados.", SSM_FAIL);
		return;
	endif

	SendSysMessage(who, "Selecione a criatura que você deseja treinar.");
	var creature := Target(who, TGTOPT_CHECK_LOS);
	var instincts := GetObjProperty(creature, "instincts");
	var bond := (Getobjproperty(creature, "bond") == "fiel") ;
	if (!bond)
		SendSysMessage(who, "Esse animal não é fiel a você, conquiste a confiança dele primeiro!", 0, 32);
		return;
	endif

	if( GetObjProperty(creature, "Blocked") || creature.frozen )
		SendSysMessage(who, "O raciocínio por trás da sua análise está incorreto.");
		return 0;
	endif

	var advance_flags;
	if(creature.script == ":ghaia:tamed")
		TeachGump (who, creature);
	else
		return 0;
	endif

endfunction


function TeachGump(who, creature)

	info_cfg := ReadConfigFile(":taming:taming");
	if ( !info_cfg )
		SendSysMessage(who, "Erro ao ler cfg ->"+info_cfg);
		return 0;
	else
		index_list := GetConfigStringArray(info_cfg["Index"], "Ins");
	endif

	template := GumpTemplate();

	var gump := BuildGump(who, creature);
	var input := GFSendGump(who, gump);

	if ( input[0] > 1 ) // Define na hora de apertar o botão ensinar
		ProcessInput(who, creature, input);
	endif

endfunction

function ProcessInput(who, creature, input)
	var id := 2;

	foreach ins in new_list
		if( input[0] == id )
			TeachNow(who, creature, ins);
			break;
		else
			id := id + 1;
		endif
	endforeach
endfunction

function GumpTemplate()
	var gump := GFECreateGump("MENU DESPERTAR", 350, 500);
	GFPage(gump, 0);
	GFGumpPic(gump, 180, 290, 1629); // jacaré primeiro lateral, segundo altura
	GFGumpPic(gump, 25, 105, 1631); //boi
	GFPage(gump, 1);

	return gump;
endfunction

function BuildGump(who, creature)
	var gump := template;
	var y_pos := START_Y;

	foreach index in index_list
		var ins_elem := info_cfg[index];
			BuildInstincts(who, creature, gump, ins_elem, y_pos);
			new_list.append(index);
		SleepMS(2);
	endforeach

	det_page := INIT_DET_PAGE;
	y_pos := START_Y;

	foreach index in new_list
		BuildDetails(gump, index, y_pos);
		SleepMS(2);
	endforeach

	return gump;
endfunction

function BuildInstincts(who, creature, byref gump, ins_elem, byref y_pos)

	if( y_pos > END_Y )
		GFAddButton(gump, 243, 34, 2224, 2224, GF_PAGE_BTN, gump.cur_page+1); //botão de numero de página
		y_pos := START_Y;
		GFPage(gump, gump.cur_page+1); //vai para a lista da descrição
	endif

	if( y_pos == START_Y )//texto inicial e títulos
		GFTextLine(gump, 200, 100, 10, "Despertar Natureza");
		GFTextLine(gump, 45, 67, 0, "Você pode despertar a natureza (stats) ou o");
		GFTextLine(gump, 45, 80, 0, "instinto (crítico-dano) do seu fiel animal.");
		GFTextLine(gump, 45, 450, 30,	" 	OBS: o animal só pode ter uma natureza e");
		GFTextLine(gump, 125, 463, 30,	"  			um instinto!");
		GFTextLine(gump, 55, 290, 90, "Despertar Instintos");
	endif

	if(gump.cur_page > 1) //botão de número da página
		GFAddButton(gump, 213, 34, 2223, 2223, GF_PAGE_BTN, gump.cur_page-1);
	endif

var mount_packs := (creature.npctemplate == ":brainai:horse" || creature.npctemplate == ":brainai:horse2" || creature.npctemplate == ":brainai:horse3"|| creature.npctemplate == ":brainai:horse4" || creature.npctemplate == ":brainai:horse5" || creature.npctemplate == ":brainai:llama");// quem pode treinar animal de carga
var sense_ones := (creature.npctemplate == ":brainai:dog" || creature.npctemplate == ":brainai:eagle"); // quem pode treinar sentido aguçado
var npccfgfile := ReadConfigFile(":*:npcdesc");
var creature_who := NPC_ParseTemplateName(creature.npctemplate).template;
var creature_taxonomy := GetConfigString(npccfgfile[creature_who], "Taxonomy"); // identifca a taxonomy do npcdesc
var pet_instinct := GetConfigStringArray(ins_elem, "Taxonomy"); // LISTA TODOS do cfg
var equal_taxonomy := (creature_taxonomy in pet_instinct); //identifica a taxonomy do cfg de acordo com o alvo
//print("A criatura eh "+creature_who+" Os taxonomys sao "+creature_taxonomy+" e os iguais sao "+equal_taxonomy); DEBUG
	if( (ins_elem.Type == 0) && TemHabilidade(who, "Mestre de Feras") ) //listagem dos instintos naturais

		GFTextLine(gump, 190, y_pos+30, 1890, ins_elem.Nome); // tive que listar individualmente pra não dar bode, a lista do cfg de acordo com o CONST inicial começa no 10
		if(ins_elem.Nome == "Ferocidade")
		GFAddButton(gump, 310, y_pos+33, 1209, 1210, GF_PAGE_BTN, 10);

		y_pos := y_pos+20;
		elseif(ins_elem.Nome == "Flexibilidade")
		GFAddButton(gump, 310, y_pos+33, 1209, 1210, GF_PAGE_BTN, 11);

		y_pos := y_pos+20;
		elseif(ins_elem.Nome == "Fortaleza")
		GFAddButton(gump, 310, y_pos+33, 1209, 1210, GF_PAGE_BTN, 12);

		y_pos := y_pos+20;
		endif

	elseif ( (ins_elem.Type == 2 && sense_ones) && TemHabilidade(who, "Mestre de Feras") ) // Aqui inseri o senso aguçado, type 2 no cfg
		GFTextLine(gump, 170, y_pos+20, 1890, ins_elem.Nome);
		GFAddButton(gump, 290, y_pos+23, 1209, 1210, GF_PAGE_BTN, 13);

		y_pos := y_pos+20;
	elseif((ins_elem.Type == 1) && (equal_taxonomy) && TemHabilidade(who, "Mestre de Feras")) //instintos selvagens listados de acordo com o alvo e cfg
	GFTextLine(gump, 47, y_pos+160, 1890, ins_elem.Nome);
	var det_pagex := ins_elem.Number; //inseri um valor number no cfg pra ficar mais facil para listar, lá começa no 15
	GFAddButton(gump, 27, y_pos+163, 1209, 1210, GF_PAGE_BTN, det_pagex);

	y_pos := y_pos+20;
	else
	if ( !TemHabilidade(who, "Mestre de Feras") )
		GFTextLine(gump, 170, 154, 1890, "Você não tem a ");
		GFTextLine(gump, 170, 166, 1890, "habilidade necessária.");
		y_pos := y_pos+10;
	elseif ( !TemHabilidade(who, "Mestre de Feras") )
		GFTextLine(gump, 27, 334, 1890, "Você não tem a ");
		GFTextLine(gump, 27, 346, 1890, "habilidade necessária.");
	endif
	endif

	return 1;
endfunction


function BuildDetails(byref gump, ins_name, byref y_pos)

	var cfg_elem := info_cfg[ins_name];

	GFPage(gump, det_page);
	GFAddButton(gump, 80, 44, 2223, 2223, GF_PAGE_BTN, 1);
	GFTextLine(gump, 70, 60, 0, "(voltar)");
	if(cfg_elem.Type == 1) //identificar se é instinto selvagem para onde aparecer o título descrição e o botão de ensinar
			GFTextLine(gump, 55, 280, 0, "Descrição");
			GFTextLine(gump, 58, 400, 0, "Ensinar");
			GFAddButton(gump, 67, y_pos+300, 1209, 1210, GF_CLOSE_BTN, btn_maxId);
		else //identificar se é instinto natural para onde aparecer a descrição e o botão de ensinar
			GFTextLine(gump, 200, 55, 0, "Descrição");
			GFTextLine(gump, 210, 200, 0, "Ensinar");
			GFAddButton(gump, 221, y_pos+95, 1209, 1210, GF_CLOSE_BTN, btn_maxId);
		endif

	var desc := GetConfigStringArray(cfg_elem, "Desc");
	if ( desc.Size() < 1 ) // se não tiver descrição não aparece nada
		return 0;
	endif

	foreach line in desc // identificar se é instinto natural ou selvagem para aparecer a descrição da hab
		if(cfg_elem.Type == 1)
			GFTextLine(gump, 20, y_pos+220, 1890, line);
			y_pos := y_pos+20;
			SleepMS(2);
		else
			GFTextLine(gump, 180, y_pos+10, 1890, line);
			y_pos := y_pos+20;
			SleepMS(2);
		endif
	endforeach

	y_pos := y_pos+20;

	det_page := det_page + 1;
	btn_maxId := btn_maxId + 1;
	y_pos := START_Y;

	return 1;
endfunction

function TeachNow(who, tamed, ins)
	if( Distance(who, tamed) > 1 )
		SendSysMessage(who, "Você não vai conseguir ensinar nada de tão longe!");
		return;
	endif

	var instincts := GetObjProperty(tamed, "instincts");
	var info_cfg := ReadConfigFile(":taming:taming");
	var ins_natural := GetObjProperty(tamed, "Group_natural");
	var ins_savage := GetObjProperty(tamed, "Group_savage");
	var ins_2 := info_cfg[ins].Group;
	if ((ins_2 == 1) && (ins_natural == 1)) //check para quem já tem 1 instinto natural e não pode mais pegar do mesmo tipo
		SendSysMessage(who, "Você já despertou a natureza nesse animal!");
		return;
	elseif ((ins_2 == 2) && (ins_savage == 1))// check para instinto selvagem e não poder pegar mais um
		SendSysMessage(who, "Você já despertou o instinto selvagem nesse animal!");
		return;
	else
	endif

	if(!instincts)
	instincts := dictionary;
	endif

	if(instincts[ins]) //não repetir hab no pet
		SendSysMessage(who, "Este animal já despertou esse instinto.");
		return;
	endif

	var new_ins := struct;
	var groupa := info_cfg[ins].Group;
	var critic := info_cfg[ins].Critic;

	new_ins.ins_name := ins;
	instincts.insert(ins, new_ins);//identificar a prop de acordo com o instinto escolhido
	SetObjProperty(tamed, "instincts", instincts); //inserir no pet

	if(groupa == 1) // insere se é instinto natural ou selvagem para não poder pegar mais
		SetObjProperty(tamed, "Group_natural", 1);
	elseif(groupa == 2)
		SetObjProperty(tamed, "Group_savage", 1);
	endif

	if(!critic) //adiciona os criticos ou modificações nos stats
		if(info_cfg[ins].Nome == "Ferocidade")
			AP_SetTrueStat(tamed, STRENGTH, AP_GetStat(tamed, STRENGTH) + 15);
			tamed.resist_physical_mod  := tamed.resist_physical_mod + 20;
			RecalcVitals(tamed);
		elseif(info_cfg[ins].Nome == "Flexibilidade")
			AP_SetTrueStat(tamed, DEXTERITY, AP_GetStat(tamed, DEXTERITY) + 15);
			tamed.resist_physical_mod  := tamed.resist_physical_mod + 20;
			RecalcVitals(tamed);
		elseif(info_cfg[ins].Nome == "Fortaleza")
			var hits := CInt(AP_GetVitalMaximumValue(tamed, "Hits"));
			var variavel := Cint(hits / 2);
			var variavel2 := Cint(variavel /2); //não sei pq ele duplica por isso a divisão pela metade
			setObjProperty(tamed, "hitsmod", variavel2);
			RecalcVitals(tamed);
		elseif(info_cfg[ins].Nome == "Sentidos Aguçados")
			var teste := GetAttribute(tamed, AWARENESS);
			AP_SetTrueSkill(tamed, AWARENESS, teste + 40);
			tamed.resist_physical_mod  := tamed.resist_physical_mod + 20;
			RecalcVitals(tamed);
		//elseif(info_cfg[ins].Nome == "Animal de Carga") //DECICIDIR SE VAI TER OU NÃO, HJ O CARA SÓ BOTA A BACKPACK E JÁ CRIA ANIMAL DE CARGA
			//if (tamed.objtype == 0xdc) //para lhamas
				//tamed.graphic := 292;
			//else // para cavalos
				//tamed.graphic := 291;
			//endif
		   //var newbackpack := CreateItemAtLocation(tamed.x, tamed.y, tamed.z, 0xe75,1, tamed.realm); // equipa a mochila no pet
			//if (!EquipItem(tamed, newbackpack))
				//return;
			//endif
		endif
		SendSysMessageEX(who, "Você despertou a natureza com sucesso.", SSM_INFO);
	else
		SetObjProperty(tamed, "Critic", critic); // Aqui define os criticos do instinto selvagem, TO DO -> script de criticos para definir essas habs
		SendSysMessageEX(who, "Você despertou o instinto com sucesso.", SSM_INFO);
	endif

	
endfunction