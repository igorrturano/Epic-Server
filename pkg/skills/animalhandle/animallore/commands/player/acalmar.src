use uo;
use cfgfile;
use os;

include ":charactercreation:habilidades";
include ":attributes:include/attributeConstants";
include ":attributes:include/attributes";
include ":brainAI:npcUtil";
include ":tn:npcutil";
include ":tn:cooldown";
include ":ghaia:ghaia";
include "include/sysEvent";
include "include/eventID";

program textcmd_acalmar(who)
	var delay := GetObjProperty(who, "delayskill");
	if(delay)
		if(delay > ReadGameClock())
			SendSysMessage(who, "Voce ainda esta fazendo outra coisa.");
			return;
		endif
	endif
	SetObjProperty(who, "delayskill", ReadGameClock() + 5);
	
	if (who.hidden)
		SendSysMessageEx(who, "Você precisa ser visto para acalmar criaturas.", SSM_FAIL);
		return;
	endif

	SendSysMessageEx(who, "Selecione a criatura que você deseja acalmar.", SSM_REQUEST);
	var creature := Target(who, TGTOPT_CHECK_LOS);


	if( GetObjProperty(creature, "Blocked") || creature.frozen )
		SendSysMessage(who, "O raciocinio por tras da sua analise esta incorreto.");
		return 0;
	endif

	var dist := Distance(who, creature);
	if (dist > 8)
		SendSysMessageEx(who, "Você está longe demais.");
		return 0;
	endif

	var npccfgfile := ReadConfigFile(":brainai:npcdesc");
	var creature_template := ParseTemplateName(creature.npctemplate).template;
	var taxonomy := npccfgfile[creature_template].Taxonomy;	
	var tameDifficulty := npccfgfile[creature_template].TameDifficulty;	

	if( !taxonomy || tameDifficulty)
			SendSysMessage(who, "Esse não pode ser um alvo válido.");
			return 0;
	endif

	unloadConfigFile(":brainai:npcdesc");

	var category := lower(getnpccategory( creature_template ));
	var valid_categories := { "animal", "evilanimal", "giantanimal", "mount", "snow", "desert", "underdark" };
	var index := valid_categories.findIndex(category);
	if ( index == 0 )
		SendSysMessage(who, "Esse nao pode ser um alvo valido.");
		return 0;
	endif

	PrintTextAbove(who,"*Tenta acalmar "+ creature.name + "*");
	Sleep(1);
	if( SkillCheck(who, HANDLEANIMAL, tameDifficulty, tameDifficulty-15) > 0)
		var eventStruct := struct { type := EVID_PEACEMADE, source := who };
		sendEvent( creature, eventStruct);
		SetCooldown(creature, "peacemade", cint(AP_GetSkill(who, HANDLEANIMAL)));
		PrintTextAbovePrivate(creature, "A criatura foi acalmada.", who);
		return 1;
	else
		PrintTextAbovePrivate(creature, "Voce falha em acalmar o animal.", who);
		return 0;
	endif
endprogram
