use uo;

include ":spells:tnmagery";
include ":charactercreation:habilidades";
include ":attributes:include/attributeConstants";
include ":attributes:include/attributes";
include ":gumps:include/gumps";
include ":brainAI:npcUtil";
include ":combat:damage";
include ":tn:npcutil";
include ":tn:cooldown";
include ":ghaia:ghaia";
include "include/sysEvent";
include "include/eventID";


program skill_animal_lore( who )

        EraseObjProperty(who, "IsMeditating");
        EraseObjProperty(who, "HealTimer");

        SendSysMessage(who, "Qual animal voce deseja examinar?");
        var creature := Target(who, TGTOPT_CHECK_LOS);
        if( GetObjProperty(creature, "Blocked") || creature.frozen )
                SendSysMessage(who, "O raciocinio por tras da sua analise esta incorreto.");
                return 0;
        endif

        if( creature.serial == who.serial )
                SendSysMessage(who, "Esse nao pode ser um alvo valido.");
                return 0;
        endif

        if( !creature.isA(POLCLASS_NPC) )
                SendSysMessage(who, "Esse nao pode ser um alvo valido.");
                return 0;
        endif

        if( (creature.graphic == 0x190) || (creature.graphic == 0x191) || (creature.graphic == 309) || (creature.graphic == 307) || (creature.graphic == 14) )
                SendSysMessage(who, "Esse nao pode ser um alvo valido.");
                return 0;
        endif

    var category := lower(getnpccategory( ParseTemplateName(creature.npctemplate).template ));

    if ( (category == "animal") || ( category == "evilanimal") || ( category == "giantanimal") || ( category == "mount") || ( category == "snow") )
    else
        SendSysMessage(who, "Esse nao pode ser um alvo valido.");
        return 0;
    endif


    var advance_flags;
    if(creature.script == ":ghaia:tamed")
        advance_flags := ADV_DISABLE;
    else
        advance_flags := ADV_SKILL;
    endif

    var npcDificuldade := CInt(AP_GetSkill(creature, "Wrestling"));
    PrintTextAbove(who,"*Analisando "+ creature.name + "*");
    Sleep(1);
    if( SkillCheck(who, HANDLEANIMAL, npcDificuldade, npcDificuldade-10, advance_flags) > 0)
                // If the player succeeds, send the gump.
                // Create the Gump
                var al_Gump := AL_LoadGump(who, creature);
                var input := GFSendGump(who, al_Gump);

        if (creature.opponent)
            if ( isBoss(creature) )
                SendSysMessage(who, "Esse nao pode ser um alvo valido.");
                return 0;
            endif
            var ev := struct;
            ev.+type;
            ev.type := EVID_PEACEMADE; // ajetra isso
            ev.+source;
            ev.source := who;
            sendEvent( creature, ev);
            SetCooldown(creature, "peacemade", cint(AP_GetSkill(who, HANDLEANIMAL)*5));
            PrintTextAbovePrivate(creature, "A criatura foi acalmada.", who);
        endif

          if (input[0] == 999)
          elseif (input[0] == 900 )
            if ( isBoss(creature) )
                SendSysMessage(who, "Esse nao pode ser um alvo valido.");
                return 0;
            endif
            var ev := struct;
            ev.+type;
            ev.type := EVID_PEACEMADE; // ajetra isso
            ev.+source;
            ev.source := who;
            sendEvent( creature, ev);
            SetCooldown(creature, "peacemade", cint(AP_GetSkill(who, HANDLEANIMAL)*5));
            //sendsysmessage(who, " " + ev );
            PrintTextAbovePrivate(creature, "A criatura foi acalmada.", who);
          endif
        else
                PrintTextAbovePrivate(creature, "Voce falha em conseguir examinar este animal.", who);
        endif

        return 0;

endprogram

// Get the Happiness level
function GetHappy(percentage)
  if(percentage >= 98)
    return "Felicidade: parece maravilhosamente feliz.";
  elseif(percentage >= 88)
    return "Felicidade: parece extremamente feliz.";
  elseif(percentage >= 78)
    return "Felicidade: parece muito feliz";
  elseif(percentage >= 68)
    return "Felicidade: parece bastante feliz.";
  elseif(percentage >= 58)
    return "Felicidade: parece feliz.";
  elseif(percentage >= 48)
    return "Felicidade: parece normal.";
  elseif(percentage >= 38)
    return "Felicidade: parece normal, eu presumo.";
  elseif(percentage >= 28)
    return "Felicidade: parece infeliz.";
  elseif(percentage >= 18)
    return "Felicidade: parece bem triste.";
  elseif(percentage >= 8)
    return "Felicidade: parece muito triste.";
  else
    return "Felicidade: parece confuso e irritadiço.";
  endif
endfunction


function AL_LoadGump(who, creature)

    who := who;
        // Declare the variables for use with the data array.
        // There is BOUND to be a retardedly more simple way of doing this,
        // I am just lazy and not going to try :P
        var hits := ""+GetVital(creature, "Hits")/100+"/"+AP_GetVitalMaximumValue(creature, "Hits")+"";
        var stamina := ""+GetVital(creature, "Stamina")/100+"/"+AP_GetVitalMaximumValue(creature, "Stamina")+"";
        var mana := ""+GetVital(creature, "Mana")/100+"/"+AP_GetVitalMaximumValue(creature, "Mana")+"";
        var str := ""+AP_GetStat(creature, STRENGTH)+"";
        var dex := ""+AP_GetStat(creature, DEXTERITY)+"";
        var int := ""+AP_GetStat(creature, INTELLIGENCE)+"";
        var ar := ""+creature.resist_physical+"%";
        var arf := ""+creature.resist_fire+"%";
        var arc := ""+creature.resist_cold+"%";
        var wrestStr := AP_GetSkill(creature, "Wrestling");
        var tactStr := AP_GetSkill(creature, TACTICS);
        var anatStr := 0; //AP_GetSkill(creature, ANATOMY);
        var poisonStr := 0; // AP_GetSkill(creature, POISONING);
        var mageryStr := AP_GetSkill(creature, MAGERY);
        var magicloreStr := AP_GetSkill(creature, MAGICLORE);

        var cTemplate := NPC_GetNPCConfig(creature.npctemplate);

        //var thepacktype := cTemplate.packinstinct;
        //if( TypeOf(thepacktype) != "String" )
          //      thepacktype := "None";
        //endif
		var thepacktype := dictionary;
		var instintos := GetObjProperty(creature, "instincts");
		if (!instintos)
			thepacktype := "Nada";
		else
			thepacktype := instintos.keys();
		endif

        var foodtype := cTemplate.food;
        if( TypeOf(foodtype) != "String" )
                foodtype := "qualquer";
        endif

		var dono := GetObjProperty(creature, "owner");
		if (!dono)
			dono := "Animal Selvagem.";
		else
			dono := "Pertence a alguem.";
		endif

        var loyalty := "";
        if(creature.script == ":ghaia:tamed")
            loyalty := Gethappy(CInt(GetObjProperty(creature, "happiness")));
        endif

//controle do tempo de fidelizar (tudo em segundos!)
	var tempo_fidelizar := "";
	var timebond := ReadGameClock(); //tempo do relógio
	var startbond := GetObjProperty(creature, "bond"); //hora que foi tamado
	var adestramento := AP_GetSkill(who, HANDLEANIMAL); //skill do owner
	var adestramentocalc := (adestramento * 4320); //calculo do modificador do tempo
	var tempo_detreino := ( 432001 - adestramentocalc); //modificador do tempo menos 5 dias total para fidelizar qqr animal

var tempo_fiel := startbond + tempo_detreino; //tempo total para ele ser fidelizado
var tempo_agora := tempo_fiel - timebond; // quanto tempo falta de acordo com o clock de agora
	var tempo_emdias := Cint(tempo_agora / 86400); // transforma em dias
		if(!GetObjProperty(creature, "NeverRelease") && startbond )
			tempo_fidelizar := "Tempo para fidelizar: +/- "+tempo_emdias+" dias.";
		endif

var thegender := GetObjProperty(creature, "Sexo");
var thesex;
if (thegender == 1)
	thesex := "Macho";
elseif (thegender == 2)
	thesex := "Fêmea";
else
	thesex := "sem info";
endif

var num_partos :=	Cint(Getobjproperty(creature, "Gravida")); //Qtas vezes engravidou

        var gump := GFCreateGump();
        GFGumpPic(gump, 100, 100, 2080);
        GFGumpPic(gump, 118, 137, 2081);
        GFGumpPic(gump, 118, 207, 2081);
        GFGumpPic(gump, 118, 277, 2081);
        GFGumpPic(gump, 118, 347, 2083);
        GFHTMLArea(gump,  147, 108, 210, 18, "<center><i>"+CStr(creature.name)+"</i></center>");
        GFAddButton(gump, 240, 77, 2093, 2093, GF_CLOSE_BTN, 2);

    if( creature.opponent)
            GFAddButton(gump, 243, 360, 2103, 2104, 1, 900);
        GFTextLine(gump, 260, 355, 1153, "Acalmar");
    endif

        GFGumpPic(gump, 140, 138, 2091);
        GFGumpPic(gump, 140, 335, 2091);

        GFPage(gump, 1);
        GFGumpPic(gump, 128, 152, 2086);
        GFHTMLArea(gump, 147, 150, 160, 18, "<basefont color=#A52A2A>Atributos");
        GFHTMLArea(gump, 153, 168, 160, 18, "<basefont color=#4A3929>Hits");
        GFHTMLArea(gump, 280, 168,  75, 18, "<basefont color=#4A3929><div align=right>"+CStr(hits)+"</div>");
        GFHTMLArea(gump, 153, 186, 160, 18, "<basefont color=#4A3929>Stamina");
        GFHTMLArea(gump, 280, 186,  75, 18, "<basefont color=#4A3929><div align=right>"+CStr(stamina)+"</div>");
        GFHTMLArea(gump, 153, 222, 160, 18, "<basefont color=#4A3929>Força");
        GFHTMLArea(gump, 280, 222,  75, 18, "<basefont color=#4A3929><div align=right>"+CStr(str)+"</div>");
        GFHTMLArea(gump, 153, 240, 160, 18, "<basefont color=#4A3929>Destreza");
        GFHTMLArea(gump, 280, 240,  75, 18, "<basefont color=#4A3929><div align=right>"+CStr(dex)+"</div>");
        GFGumpPic(gump, 128, 258, 2086);
        GFHTMLArea(gump, 147, 258, 160, 18, "<basefont color=#A52A2A>Lealdade");
        GFHTMLArea(gump, 135, 276, 360, 18, "<basefont color=#4A3929>"+loyalty);
        GFHTMLArea(gump, 135, 294, 360, 18, "<basefont color=#4A3929>"+dono);
		if (who.serial == GetObjProperty(creature, "owner")) // apenas se quem tá analisando é dono aparece o tempo que falta para fidelizar
			GFHTMLArea(gump, 135, 312, 360, 18, "<basefont color=#4A3929>"+tempo_fidelizar);
		endif
        GFAddButton(gump, 317, 358, 5603, 5607, GF_PAGE_BTN, 4);
        GFAddButton(gump, 340, 358, 5601, 5605, GF_PAGE_BTN, 2);

        GFPage(gump, 2);
        GFGumpPic(gump, 128, 152, 2086);
        GFHTMLArea(gump, 147, 150, 160, 18, "<basefont color=#A52A2A>Resistencias");
        GFHTMLArea(gump, 153, 168, 160, 18, "<basefont color=#4A3929>Fisica");
        GFHTMLArea(gump, 320, 168,  35, 18, "<basefont color=#4A3929><div align=right>"+ar+"</div>");
        GFHTMLArea(gump, 153, 186, 160, 18, "<basefont color=#4A3929>Fogo");
        GFHTMLArea(gump, 320, 186,  35, 18, "<basefont color=#4A3929><div align=right>"+arf+"</div>");
        GFHTMLArea(gump, 153, 204, 160, 18, "<basefont color=#4A3929>Frio");
        GFHTMLArea(gump, 320, 204,  35, 18, "<basefont color=#4A3929><div align=right>"+arc+"</div>");
        GFGumpPic(gump, 128, 225, 2086);
        GFHTMLArea(gump, 147, 222, 160, 18, "<basefont color=#A52A2A>Conhecimentos");
        GFHTMLArea(gump, 153, 240, 160, 18, "<basefont color=#4A3929>Magery");
        GFHTMLArea(gump, 320, 240,  35, 18, "<basefont color=#4A3929><div align=right>"+mageryStr+"</div>");
        GFHTMLArea(gump, 153, 258, 160, 18, "<basefont color=#4A3929>Magic Lore");
        GFHTMLArea(gump, 320, 258,  35, 18, "<basefont color=#4A3929><div align=right>"+magicloreStr+"</div>");
        GFAddButton(gump, 317, 358, 5603, 5607, GF_PAGE_BTN, 1);
        GFAddButton(gump, 340, 358, 5601, 5605, GF_PAGE_BTN, 3);

        GFPage(gump, 3);
        GFGumpPic(gump, 128, 152, 2086);
        GFHTMLArea(gump, 147, 150, 160, 18, "<basefont color=#A52A2A>Combate");
        GFHTMLArea(gump, 153, 168, 160, 18, "<basefont color=#4A3929>Wrestling");
        GFHTMLArea(gump, 320, 168,  35, 18, "<basefont color=#4A3929><div align=right>"+wrestStr+"</div>");
        GFHTMLArea(gump, 153, 186, 160, 18, "<basefont color=#4A3929>Tactics");
        GFHTMLArea(gump, 320, 186,  35, 18, "<basefont color=#4A3929><div align=right>"+tactStr+"</div>");
        GFHTMLArea(gump, 153, 204, 160, 18, "<basefont color=#4A3929>Anatomy");
        GFHTMLArea(gump, 320, 204,  35, 18, "<basefont color=#4A3929><div align=right>"+anatStr+"</div>");
        GFHTMLArea(gump, 153, 222, 160, 18, "<basefont color=#4A3929>Poisoning");
        GFHTMLArea(gump, 320, 222,  35, 18, "<basefont color=#4A3929><div align=right>"+poisonStr+"</div>");
        GFGumpPic(gump, 128, 243, 2086);
        GFHTMLArea(gump, 147, 240, 160, 18, "<basefont color=#A52A2A>Alimentação");
        GFHTMLArea(gump, 153, 258, 160, 18, "<basefont color=#4A3929>"+foodtype);
        GFGumpPic(gump, 128, 275, 2086);
        GFHTMLArea(gump, 147, 275, 160, 18, "<basefont color=#A52A2A>Instintos");
        GFHTMLArea(gump, 135, 293, 260, 18, "<basefont color=#4A3929>"+thepacktype);

        GFAddButton(gump, 317, 358, 5603, 5607, GF_PAGE_BTN, 2);
        GFAddButton(gump, 340, 358, 5601, 5605, GF_PAGE_BTN, 4);

        GFPage(gump, 4);
        GFGumpPic(gump, 128, 152, 2086);
        GFHTMLArea(gump, 147, 150, 160, 18, "<basefont color=#A52A2A>Magias");
     if (TemHabilidade(who, "Magia Natural"))
            var cfg := ReadConfigFile(":spells:config/druidspells");
        var npcdesc := ReadConfigFile(":brainai:npcdesc");
        var npctemplate := NPC_ParseTemplateName(creature.npctemplate);
        npctemplate := npctemplate.template;
        var npcelem := FindConfigElem(npcdesc, npctemplate);
        var animalspell := GetConfigInt(npcelem, "druidspell");
        var elem  := FindConfigElem(cfg, animalspell );
        var description := CStr (getConfigString(elem, "Desc"));
        if ( getConfigString(elem, "Desc") != error)
            GFHTMLArea(gump, 153, 168, 160, 80, "<basefont color=#4A3929>"+description);
        else
            GFHTMLArea(gump, 153, 168, 160, 80, "<basefont color=#4A3929>O animal nao pode lhe ensinar nada");
        endif

     else
        GFHTMLArea(gump, 153, 168, 160, 80, "<basefont color=#4A3929>Voce nao e druida");
     endif

        GFGumpPic(gump, 128, 186, 2086);
        GFHTMLArea(gump, 147, 186, 160, 18, "<basefont color=#A52A2A>Sexo");
       GFHTMLArea(gump, 135, 204, 260, 18, "<basefont color=#4A3929>"+thesex);
	   if (GetObjProperty(creature, "Sexo") == 2)
       GFHTMLArea(gump, 135, 222, 260, 18, "<basefont color=#4A3929>Ja pariu "+num_partos+" vezes");
	   endif

        GFAddButton(gump, 317, 358, 5603, 5607, GF_PAGE_BTN, 3);
        GFAddButton(gump, 340, 358, 5601, 5605, GF_PAGE_BTN, 1);


        return gump;

endfunction
