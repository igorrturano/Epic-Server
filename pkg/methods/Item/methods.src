use cfgfile;
use uo;
use datafile;

include ":gumps:epicGumps";

program Install()
	print("INSTALLING: Methods for Items... OK!");
	return 1;
endprogram

/**
 * getMaterialID(item)
 *
 * Purpose
 * Buscar o ID do material do item craftado pelo player
 *
 * Parameters
 * item: itemRef
 *
 * Return value
 * ID do material
 *
 */
exported function getMaterialID(item)
	return item.getProp("material") ? item.getProp("material") : error{"errortext" := "The item have no Material!"};
endfunction

/**
 * getMaterialName(item)
 *
 * Purpose
 * Buscar o nome do material do item craftado pelo player baseado no ID cadastrado na prop dele
 *
 * Parameters
 * item: itemRef
 *
 * Return value
 * Nome do material
 *
 */
exported function getMaterialName(item)
	return getMaterialID(item) ? FindConfigElem(ReadConfigFile(":crafting:config/resourceList"), getMaterialID(item)).name : getMaterialID(item);
endfunction

exported function isSpiderEggSac(item)
	if (item.objtype == 0x10D9) return 1; endif
	return 0;
endfunction

exported function IsInTheDungeon(item)
    // Boas práticas: declarar todas as variáveis no início
    var who_x := item.x;
    var who_y := item.y;
    var who_z := item.z;
    var who_realm := item.realm;
    var coords := {who_x, who_y, who_z, who_realm};
    var df := OpenDataFile(":tn:dungeons");
    if (!df)
        return 0;
    endif
    
    foreach dungeon_name in (df.keys())
        var dungeon_elem := df.FindElement(dungeon_name);
        if (!dungeon_elem)
            continue;
        endif
        
        var dungeon_realm := dungeon_elem.GetProp("Realm");
        
        // Verificar os três possíveis retângulos (Rect1, Rect2, Rect3)
        for i := 1 to 3
            var rect_prop := "Rect" + i;
            var rect := dungeon_elem.GetProp(rect_prop);
            
            // Se não existir esta propriedade de retângulo, continue para o próximo
            if (!rect)
                continue;
            endif
            
            var rect_array := SplitWords(rect);
            
            // Validação melhorada do tamanho do array
            if (rect_array.size() < 4)
                PrintTextAbove(item, "Erro: Dados de retângulo inválidos para " + dungeon_name + " (" + rect_prop + ")");
                continue;
            endif
            
            // Conversão e validação das coordenadas
            var x1 := CInt(rect_array[1]);
            var y1 := CInt(rect_array[2]);
            var x2 := CInt(rect_array[3]);
            var y2 := CInt(rect_array[4]);
            
            // Cálculo dos limites
            var min_x := Min(x1, x2);
            var max_x := Max(x1, x2);
            var min_y := Min(y1, y2);
            var max_y := Max(y1, y2);
            
            // Verificação da localização
            if (coords[4] == dungeon_realm)
                if (coords[1] >= min_x && coords[1] <= max_x && 
                    coords[2] >= min_y && coords[2] <= max_y)
                    return dungeon_elem.GetProp("Name");
                endif
            endif
            
            sleepms(2);
        endfor
    endforeach
    
    return 0;
endfunction
