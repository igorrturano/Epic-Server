use uo;
use os;

include ":brainAI:eventid";
include ":brainAI:npcNerves";
include ":brainAI:npcCommands";
include ":containers:storageAreas";
include ":containers:containers";
include ":fls_core:tax";

program BrainNerve(params)
	var npc		:= params[1];
	//var nerve_name:= params[2];
	var event	:= params[3];
	//var settings	:= params[4];
	//var scripts	:= params[5];
	params := 0; // Not needed anymore.

	while ( npc )
		if ( event )
			case ( event.type )
				SYSEVENT_SPEECH:
					SpeechEvent(npc, event);
					break;
				default:
					break;
			endcase

			event := 0;
		endif

		sleepms(5);
		event := wait_for_event(100000);
	endwhile
endprogram

function SpeechEvent(npc, byref event)
	var text := Lower(event.text);
	var source := event.source;

	if ( source.IsA(POLCLASS_NPC) )
		// Remember - NPCs can send speech events now.
		return 0;
	elseif ( !CheckLineOfSight(npc, event.source) )
		// No line of sight - ignore speech.
		return 0;
	endif

	// Support for regional banking.
	// Example: Seperate bank boxes for Britain, Trinsic, Moonglow, etc.
	var bank_region := GetObjProperty(npc, "City");
	if ( !bank_region )
		bank_region := CP_DEFAULT_AREA;
	endif


	if ( text["alugar"] )
		AI_Turn(npc, source, NETURN_TOWARD);
		var imoveis := GetObjProperty(npc, imoveis);
		if (imoveis == error)
			AI_Speak(npc, "Desculpe, mas estou sem nada para alugar no momento.");
		endif
		
		//AI_Speak(npc, "Tenho alguns imoveis pra voce.");
		var parms := array;
		parms[0] := npc;
		parms[1] := source;
		start_script("alugar", parms);
	elseif ( text["devolver"] )
		AI_Speak(npc, "Vai devolver o imovel alugado?");
		AI_Turn(npc, source, NETURN_TOWARD);
		var parms := array;
		parms[0] := npc;
		parms[1] := source;
		start_script("devolver", parms);
	elseif ( text["configurar"] )
		if (source.cmdlevel > 1)
			var parms := array;
			parms[0] := npc;
			parms[1] := source;
			start_script("configuraAluguel", parms);
		endif
	elseif ( text["bom dia"] || text["boa noite"] || text["boa tarde"] )
		AI_Speak(npc, "Ola, em que posso ajuda-lo? Tenho imoveis pata *alugar*.");
	endif

	return 1;
endfunction

function WithdrawlGold(npc, who, bank_box, byref text)
	var amount := FindAmountInSpeech("withdrawl", text);
	if ( !CheckGoldAmount(npc, bank_box, amount) )
		return 0;
	endif

	ConsumeSubstance(bank_box, GetObjTypeByName("GoldCoin"), amount);
	CreateItemInBackPack(who, "GoldCoin", amount);

	return 1;
endfunction

function CheckGoldAmount(npc, bank_box, amount)
	var total_gold := AmountInContainer(bank_box, GetObjTypeByName("GoldCoin"));
	if ( amount == 0 )
		AI_Speak(npc, "Everyone has atleast zero gold!");
		return 0;
	elseif ( amount > total_gold )
		AI_Speak(npc, "You do not have that much gold in your box.");
		return 0;
	else
		AI_Speak(npc, "You have enough gold.");
		return 1;
	endif
endfunction

function FindAmountInSpeech(key, text)
	var key_pos := Find(text, key, 1);
	text[1, (key_pos+Len(key))] := "";

	text := SplitWords(text);
	return CInt(text[1]);
endfunction
